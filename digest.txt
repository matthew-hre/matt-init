Directory structure:
└── matt-init/
    ├── README.md
    ├── eslint.config.mjs
    ├── flake.lock
    ├── flake.nix
    ├── package.json
    ├── tsconfig.json
    ├── vitest.config.ts
    ├── coverage/
    │   ├── base.css
    │   ├── block-navigation.js
    │   ├── index.html
    │   ├── prettify.css
    │   ├── prettify.js
    │   ├── sorter.js
    │   └── src/
    │       ├── cli.ts.html
    │       ├── index.html
    │       ├── index.ts.html
    │       ├── types.ts.html
    │       ├── lib/
    │       │   ├── db.ts.html
    │       │   ├── index.html
    │       │   ├── project-generator.ts.html
    │       │   └── utils.ts.html
    │       ├── prompts/
    │       │   ├── backend-setup.ts.html
    │       │   ├── database-provider.ts.html
    │       │   ├── index.html
    │       │   ├── project-name.ts.html
    │       │   └── yes-no.ts.html
    │       └── utils/
    │           ├── directory-handler.ts.html
    │           ├── git.ts.html
    │           ├── index.html
    │           └── package-manager.ts.html
    ├── nix/
    │   └── devShell.nix
    ├── src/
    │   ├── cli.ts
    │   ├── index.ts
    │   ├── types.ts
    │   ├── lib/
    │   │   ├── db.ts
    │   │   ├── project-generator.ts
    │   │   └── utils.ts
    │   ├── prompts/
    │   │   ├── backend-setup.ts
    │   │   ├── database-provider.ts
    │   │   ├── project-name.ts
    │   │   └── yes-no.ts
    │   ├── templates/
    │   │   ├── backend/
    │   │   │   ├── drizzle/
    │   │   │   │   └── turso/
    │   │   │   │       ├── _gitignore
    │   │   │   │       ├── drizzle.config.ts
    │   │   │   │       ├── middleware.ts
    │   │   │   │       ├── .env.example
    │   │   │   │       └── src/
    │   │   │   │           ├── app/
    │   │   │   │           │   ├── page.tsx
    │   │   │   │           │   ├── api/
    │   │   │   │           │   │   └── auth/
    │   │   │   │           │   │       └── [...all]/
    │   │   │   │           │   │           └── route.ts
    │   │   │   │           │   ├── dashboard/
    │   │   │   │           │   │   └── page.tsx
    │   │   │   │           │   ├── signin/
    │   │   │   │           │   │   └── page.tsx
    │   │   │   │           │   └── signup/
    │   │   │   │           │       └── page.tsx
    │   │   │   │           └── lib/
    │   │   │   │               ├── auth.ts
    │   │   │   │               ├── env.ts
    │   │   │   │               └── db/
    │   │   │   │                   ├── index.ts
    │   │   │   │                   └── schema/
    │   │   │   │                       ├── auth.ts
    │   │   │   │                       └── index.ts
    │   │   │   └── supabase/
    │   │   ├── base/
    │   │   │   ├── _eslint.config.mjs
    │   │   │   ├── _gitignore
    │   │   │   ├── next-env.d.ts
    │   │   │   ├── next.config.ts
    │   │   │   ├── package.json
    │   │   │   ├── postcss.config.mjs
    │   │   │   ├── tsconfig.json
    │   │   │   ├── .env.example
    │   │   │   └── src/
    │   │   │       ├── app/
    │   │   │       │   ├── globals.css
    │   │   │       │   ├── layout.tsx
    │   │   │       │   └── page.tsx
    │   │   │       ├── components/
    │   │   │       │   └── matt-init-banner.tsx
    │   │   │       └── lib/
    │   │   │           ├── env.ts
    │   │   │           └── try-parse-env.ts
    │   │   ├── extras/
    │   │   │   ├── nix/
    │   │   │   │   ├── base/
    │   │   │   │   │   ├── flake.nix
    │   │   │   │   │   └── nix/
    │   │   │   │   │       └── devShell.nix
    │   │   │   │   └── drizzle/
    │   │   │   │       └── turso/
    │   │   │   │           └── nix/
    │   │   │   │               └── devShell.nix
    │   │   │   └── vscode/
    │   │   │       └── base/
    │   │   │           ├── _extensions.json
    │   │   │           └── _settings.json
    │   │   └── providers/
    │   └── utils/
    │       ├── directory-handler.ts
    │       ├── git.ts
    │       └── package-manager.ts
    ├── test/
    │   ├── cli.test.ts
    │   ├── projects.test.ts
    │   ├── lib/
    │   │   ├── project-generator.test.ts
    │   │   ├── system.test.ts
    │   │   └── utils.test.ts
    │   ├── prompts/
    │   │   ├── backup-setup.test.ts
    │   │   ├── database-provider.test.ts
    │   │   ├── project-name.test.ts
    │   │   └── yes-no.test.ts
    │   └── utils/
    │       └── directory-handler.test.ts
    ├── .github/
    │   └── workflows/
    │       └── lint.yaml
    └── .husky/
        ├── pre-commit
        └── _/
            ├── applypatch-msg
            ├── commit-msg
            ├── h
            ├── husky.sh
            ├── post-applypatch
            ├── post-checkout
            ├── post-commit
            ├── post-merge
            ├── post-rewrite
            ├── pre-applypatch
            ├── pre-auto-gc
            ├── pre-commit
            ├── pre-merge-commit
            ├── pre-push
            ├── pre-rebase
            ├── prepare-commit-msg
            └── .gitignore

================================================
File: README.md
================================================
```txt
 ███╗   ███╗ █████╗ ████████╗████████╗      ██╗███╗   ██╗██╗████████╗
 ████╗ ████║██╔══██╗╚══██╔══╝╚══██╔══╝      ██║████╗  ██║██║╚══██╔══╝
 ██╔████╔██║███████║   ██║      ██║   █████╗██║██╔██╗ ██║██║   ██║
 ██║╚██╔╝██║██╔══██║   ██║      ██║   ╚════╝██║██║╚██╗██║██║   ██║
 ██║ ╚═╝ ██║██║  ██║   ██║      ██║         ██║██║ ╚████║██║   ██║
 ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝      ╚═╝         ╚═╝╚═╝  ╚═══╝╚═╝   ╚═╝
```

> A CLI tool for scaffolding Next.js projects the way I like 'em.

## Features

- **Wickedly Fast Setup** - Under 30 seconds to a fully wired Next.js starter
- **Minimal Choices** - Three streamlined prompts: backend setup, database provider, and tooling preferences
- **Opinionated Defaults** - Pre-configured with sensible defaults and best practices
- **Backend Bundles** - Choose "DB + Drizzle + BetterAuth" for full-stack or "None" for frontend-only
- **Zero Configuration** - Strict linting, Prettier, pre-commit hooks, and CI rules included
- **Type-Safe Environment** - Zod-validated env variables that fail fast on missing config
- **Ready for Deployment** - Tailwind, VSCode settings, and production optimizations included

## ...why?

I've probably started and abandoned a dozen Next.js projects. The commonality between them is that the first hour or two of a given project is spent setting up the same things over and over again. This tool aims to automate that setup process with the components and configurations I prefer, so I can focus on building features instead of boilerplate.

Also, because enforcing harsh linting rules on hackathon teammates is more justafiable when "it came installed like that".

## Installation

```bash
# eventually this will be on npm, but for now, clone the repo
nix develop
pnpm i
```

## Usage

### Interactive Mode (Recommended)

```bash
pnpm dev
```

This will prompt you for:

- **Project name** - What to call your app
- **Backend setup** - Choose from:
  - `DB + Drizzle + BetterAuth` - Full-stack with database, ORM, and authentication
  - `Supabase` - (coming soon)
  - `None` - Frontend-only
- **Database provider** - If you chose the full-stack option:
  - `Turso (SQLite)` - Edge database (implemented)
  - `Neon (Postgres)` - (coming soon)
  - `Docker Postgres` - (coming soon)
- **Nix flake** - Optional reproducible dev environment
- **Install dependencies** - Run `pnpm install` automatically
- **Git repository** - Initialize git with initial commit

### Command Line Options

```bash
matt-init [project-name] [options]

Options:
  --no-git      Skip git initialization
  --no-install  Skip package installation
  --nix         Initialize with Nix flake
  -y, --default Use defaults, skip prompts
  -V, --version Display version number
  -h, --help    Display help
```

### Examples

```bash
# Create a new project with prompts (recommended)
pnpm dev my-awesome-app

# Create with defaults (frontend-only, no prompts)
pnpm dev my-app --default

# Create without git and dependency installation
pnpm dev my-app --no-git --no-install

# Create with Nix support
pnpm dev my-app --nix
```

## What's Included

Every generated project includes:

### Core Stack

- **Next.js 15** - React framework with App Router
- **TypeScript** - Type safety
- **Tailwind CSS** - Utility-first CSS framework
- **ESLint** - Code linting with @antfu/eslint-config

### Environment & Tooling

- **Zod-validated environment variables** - Type-safe env configuration
- **VSCode settings** - Optimized workspace configuration
- **VSCode extensions** - Recommended extensions for the stack

### Optional Addons

- **Full-Stack Backend** - Turso database + Drizzle ORM + BetterAuth authentication
- **Supabase Integration** - (coming soon)
- **Nix Flake** - Reproducible development environment

## Project Structure

Generated projects roughly follow this structure:

```txt
my-project/
├── src/
│   ├── app/
│   │   ├── globals.css
│   │   ├── layout.tsx
│   │   └── page.tsx
│   ├── components/
│   │   └── matt-init-banner.tsx
│   └── lib/
│       └── env.ts
├── public/
├── .vscode/
│   ├── extensions.json
│   └── settings.json
├── flake.nix              # (if --nix flag used)
├── drizzle.config.ts      # (if backend setup chosen)
├── next.config.ts
├── package.json
├── tailwind.config.ts
├── tsconfig.json
└── .env           # (if backend setup chosen)
```

## Development Status

### Implemented Features

**Core (Every Project):**

- [x] ESLint + Prettier configuration
- [x] Custom Next.js app with banner
- [x] Zod-validated environment variables
- [x] VS Code workspace settings
- [x] Tailwind CSS setup
- [x] TypeScript configuration

**Optional (Behind Flags or Prompts):**

- [x] Full-stack backend (Turso + Drizzle + BetterAuth)
- [x] Nix development environment (--nix flag)
- [x] Git repository initialization
- [x] Dependency installation
- [ ] Custom README generation

### In Progress

- [ ] Improved CI/CD templates

### Roadmap

**Backend Options:**

- [ ] Supabase integration
- [ ] Neon (Postgres) support
- [ ] Docker Postgres support

**Future Flags:**

- [ ] --shadcn for UI components
- [ ] --auth-only for auth without ORM

## Development

### Prerequisites

- Nix

> Feel free to go install all the project dependencies manually if you don't want to use Nix, but I ain't telling you how to do that. This is a Nix-first project baby.

### Setup

```bash
# Clone the repository
git clone <repository-url>
cd matt-init

# Switch to the development shell
nix develop

# Install dependencies
pnpm install

# Run the tool!
pnpm dev
```

### Scripts

- `pnpm build` - Compile TypeScript to JavaScript
- `pnpm dev` - Run in development mode with ts-node
- `pnpm test` - Test the CLI by creating a test project
- `pnpm lint` - Run ESLint
- `pnpm lint:fix` - Fix ESLint issues automatically

## License

CC BY-SA 4.0

## Contributing

Not taking any PRs until 1.0.0 is released!

## Acknowledgements

- Thanks to [@antfu](https://github.com/antfu/) for the ESLint config
- Shoutout to [@w3cj](https://github.com/w3cj/) from the Syntax team for general project setup advice, and the `try-parse-env.ts` script
- Quick mention to [create-t3-app](https://github.com/t3-oss/create-t3-app/) for pointing me in the right direction architecture-wise



================================================
File: eslint.config.mjs
================================================
import antfu from "@antfu/eslint-config";

export default antfu(
  {
    type: "app",
    typescript: true,
    formatters: true,
    stylistic: {
      indent: 2,
      semi: true,
      quotes: "double",
    },
    ignores: ["**/migrations/*", "next-env.d.ts"],
    overrides: [
      {
        files: ["template/**/*.tsx"],
        parserOptions: {
          ignoreDiagnostics: [7026],
        },
      },
    ],
  },
  {
    rules: {
      "ts/no-redeclare": "off",
      "ts/consistent-type-definitions": ["error", "type"],
      "no-console": "off",
      "antfu/no-top-level-await": ["off"],
      "node/prefer-global/process": ["off"],
      "node/no-process-env": ["error"],
      "perfectionist/sort-imports": ["error", { tsconfigRootDir: "." }],
      "unicorn/filename-case": [
        "error",
        {
          case: "kebabCase",
          ignore: ["README.md"],
        },
      ],
    },
  },
);



================================================
File: flake.lock
================================================
{
  "nodes": {
    "flake-utils": {
      "inputs": {
        "systems": "systems"
      },
      "locked": {
        "lastModified": 1731533236,
        "narHash": "sha256-l0KFg5HjrsfsO/JpG+r7fRrqm12kzFHyUHqHCVpMMbI=",
        "owner": "numtide",
        "repo": "flake-utils",
        "rev": "11707dc2f618dd54ca8739b309ec4fc024de578b",
        "type": "github"
      },
      "original": {
        "owner": "numtide",
        "repo": "flake-utils",
        "type": "github"
      }
    },
    "nixpkgs": {
      "locked": {
        "lastModified": 1748448571,
        "narHash": "sha256-DrexU9CkrA+VlVsXB6wyq1mbyJULozXtU5Y8KCB5HP8=",
        "owner": "nixos",
        "repo": "nixpkgs",
        "rev": "0b2a973a7823f9a3c7f04db62d95cd3950a53364",
        "type": "github"
      },
      "original": {
        "owner": "nixos",
        "ref": "release-24.11",
        "repo": "nixpkgs",
        "type": "github"
      }
    },
    "root": {
      "inputs": {
        "flake-utils": "flake-utils",
        "nixpkgs": "nixpkgs"
      }
    },
    "systems": {
      "locked": {
        "lastModified": 1681028828,
        "narHash": "sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=",
        "owner": "nix-systems",
        "repo": "default",
        "rev": "da67096a3b9bf56a91d16901293e51ba5b49a27e",
        "type": "github"
      },
      "original": {
        "owner": "nix-systems",
        "repo": "default",
        "type": "github"
      }
    }
  },
  "root": "root",
  "version": 7
}



================================================
File: flake.nix
================================================
{
  description = "matt-init";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/release-24.11";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = {
    self,
    flake-utils,
    nixpkgs,
    ...
  }:
    flake-utils.lib.eachDefaultSystem (
      system: let
        pkgs = import nixpkgs {inherit system;};
      in {
        devShell = pkgs.callPackage ./nix/devShell.nix {};
        formatter = pkgs.alejandra;
      }
    );
}



================================================
File: package.json
================================================
{
  "name": "matt-init",
  "version": "1.0.0",
  "packageManager": "pnpm@10.8.1",
  "description": "A simple CLI tool for scaffolding Next.js projects",
  "author": "",
  "license": "ISC",
  "keywords": [
    "cli",
    "nextjs",
    "scaffold",
    "typescript",
    "react",
    "tailwind"
  ],
  "main": "dist/index.js",
  "bin": {
    "matt-init": "dist/index.js"
  },
  "files": [
    "README.md",
    "dist"
  ],
  "scripts": {
    "build": "tsc",
    "dev": "ts-node -r tsconfig-paths/register src/index.ts",
    "start": "node dist/index.js",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "clean": "rm -rf dist",
    "prepublishOnly": "pnpm clean && pnpm build",
    "prepare": "husky",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "coverage": "vitest run --coverage"
  },
  "dependencies": {
    "@clack/core": "^0.5.0",
    "@clack/prompts": "^0.11.0",
    "commander": "^14.0.0",
    "execa": "^9.6.0",
    "fs-extra": "^11.2.0",
    "picocolors": "^1.1.1"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^4.13.2",
    "@eslint-react/eslint-plugin": "^1.50.0",
    "@libsql/client": "^0.15.7",
    "@types/fs-extra": "^11.0.4",
    "@types/inquirer": "^9.0.7",
    "@types/node": "^22.15.23",
    "@types/react": "^19.1.6",
    "@types/react-dom": "^19.1.5",
    "@vitest/coverage-v8": "^3.2.3",
    "@vitest/ui": "^3.2.3",
    "better-auth": "^1.2.9",
    "drizzle-kit": "^0.31.1",
    "drizzle-orm": "^0.44.0",
    "eslint": "^9.27.0",
    "eslint-plugin-format": "^1.0.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.2",
    "next": "^15.3.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "tmp": "^0.2.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3",
    "vitest": "^3.2.3",
    "zod": "^3.25.34"
  },
  "lint-staged": {
    "*.ts": [
      "eslint src --ext .ts"
    ]
  }
}



================================================
File: tsconfig.json
================================================
{
  "compilerOptions": {
    "target": "ES2020",
    "lib": [
      "ES2020"
    ],
    "baseUrl": "./src",
    "rootDir": "./src",
    "module": "commonjs",
    "moduleResolution": "node",
    "paths": {
      "~/*": [
        "./*"
      ]
    },
    "resolveJsonModule": true,
    "strict": true,
    "declaration": true,
    "declarationMap": true,
    "outDir": "./dist",
    "sourceMap": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "dist"
  ]
}



================================================
File: vitest.config.ts
================================================
import { defineConfig } from "vitest/config";

export default defineConfig({
  test: {
    globals: true,
    environment: "node",
    coverage: {
      reporter: ["text", "html"],
      exclude: [
        "**/templates/**",
        "*.config.*",
        "**/test/**",
        "**/dist/**",
      ],
    },

    alias: {
      "~/": new URL("./src/", import.meta.url).pathname,
    },
  },
});



================================================
File: coverage/base.css
================================================
body, html {
  margin:0; padding: 0;
  height: 100%;
}
body {
    font-family: Helvetica Neue, Helvetica, Arial;
    font-size: 14px;
    color:#333;
}
.small { font-size: 12px; }
*, *:after, *:before {
  -webkit-box-sizing:border-box;
     -moz-box-sizing:border-box;
          box-sizing:border-box;
  }
h1 { font-size: 20px; margin: 0;}
h2 { font-size: 14px; }
pre {
    font: 12px/1.4 Consolas, "Liberation Mono", Menlo, Courier, monospace;
    margin: 0;
    padding: 0;
    -moz-tab-size: 2;
    -o-tab-size:  2;
    tab-size: 2;
}
a { color:#0074D9; text-decoration:none; }
a:hover { text-decoration:underline; }
.strong { font-weight: bold; }
.space-top1 { padding: 10px 0 0 0; }
.pad2y { padding: 20px 0; }
.pad1y { padding: 10px 0; }
.pad2x { padding: 0 20px; }
.pad2 { padding: 20px; }
.pad1 { padding: 10px; }
.space-left2 { padding-left:55px; }
.space-right2 { padding-right:20px; }
.center { text-align:center; }
.clearfix { display:block; }
.clearfix:after {
  content:'';
  display:block;
  height:0;
  clear:both;
  visibility:hidden;
  }
.fl { float: left; }
@media only screen and (max-width:640px) {
  .col3 { width:100%; max-width:100%; }
  .hide-mobile { display:none!important; }
}

.quiet {
  color: #7f7f7f;
  color: rgba(0,0,0,0.5);
}
.quiet a { opacity: 0.7; }

.fraction {
  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  font-size: 10px;
  color: #555;
  background: #E8E8E8;
  padding: 4px 5px;
  border-radius: 3px;
  vertical-align: middle;
}

div.path a:link, div.path a:visited { color: #333; }
table.coverage {
  border-collapse: collapse;
  margin: 10px 0 0 0;
  padding: 0;
}

table.coverage td {
  margin: 0;
  padding: 0;
  vertical-align: top;
}
table.coverage td.line-count {
    text-align: right;
    padding: 0 5px 0 20px;
}
table.coverage td.line-coverage {
    text-align: right;
    padding-right: 10px;
    min-width:20px;
}

table.coverage td span.cline-any {
    display: inline-block;
    padding: 0 5px;
    width: 100%;
}
.missing-if-branch {
    display: inline-block;
    margin-right: 5px;
    border-radius: 3px;
    position: relative;
    padding: 0 4px;
    background: #333;
    color: yellow;
}

.skip-if-branch {
    display: none;
    margin-right: 10px;
    position: relative;
    padding: 0 4px;
    background: #ccc;
    color: white;
}
.missing-if-branch .typ, .skip-if-branch .typ {
    color: inherit !important;
}
.coverage-summary {
  border-collapse: collapse;
  width: 100%;
}
.coverage-summary tr { border-bottom: 1px solid #bbb; }
.keyline-all { border: 1px solid #ddd; }
.coverage-summary td, .coverage-summary th { padding: 10px; }
.coverage-summary tbody { border: 1px solid #bbb; }
.coverage-summary td { border-right: 1px solid #bbb; }
.coverage-summary td:last-child { border-right: none; }
.coverage-summary th {
  text-align: left;
  font-weight: normal;
  white-space: nowrap;
}
.coverage-summary th.file { border-right: none !important; }
.coverage-summary th.pct { }
.coverage-summary th.pic,
.coverage-summary th.abs,
.coverage-summary td.pct,
.coverage-summary td.abs { text-align: right; }
.coverage-summary td.file { white-space: nowrap;  }
.coverage-summary td.pic { min-width: 120px !important;  }
.coverage-summary tfoot td { }

.coverage-summary .sorter {
    height: 10px;
    width: 7px;
    display: inline-block;
    margin-left: 0.5em;
    background: url(sort-arrow-sprite.png) no-repeat scroll 0 0 transparent;
}
.coverage-summary .sorted .sorter {
    background-position: 0 -20px;
}
.coverage-summary .sorted-desc .sorter {
    background-position: 0 -10px;
}
.status-line {  height: 10px; }
/* yellow */
.cbranch-no { background: yellow !important; color: #111; }
/* dark red */
.red.solid, .status-line.low, .low .cover-fill { background:#C21F39 }
.low .chart { border:1px solid #C21F39 }
.highlighted,
.highlighted .cstat-no, .highlighted .fstat-no, .highlighted .cbranch-no{
  background: #C21F39 !important;
}
/* medium red */
.cstat-no, .fstat-no, .cbranch-no, .cbranch-no { background:#F6C6CE }
/* light red */
.low, .cline-no { background:#FCE1E5 }
/* light green */
.high, .cline-yes { background:rgb(230,245,208) }
/* medium green */
.cstat-yes { background:rgb(161,215,106) }
/* dark green */
.status-line.high, .high .cover-fill { background:rgb(77,146,33) }
.high .chart { border:1px solid rgb(77,146,33) }
/* dark yellow (gold) */
.status-line.medium, .medium .cover-fill { background: #f9cd0b; }
.medium .chart { border:1px solid #f9cd0b; }
/* light yellow */
.medium { background: #fff4c2; }

.cstat-skip { background: #ddd; color: #111; }
.fstat-skip { background: #ddd; color: #111 !important; }
.cbranch-skip { background: #ddd !important; color: #111; }

span.cline-neutral { background: #eaeaea; }

.coverage-summary td.empty {
    opacity: .5;
    padding-top: 4px;
    padding-bottom: 4px;
    line-height: 1;
    color: #888;
}

.cover-fill, .cover-empty {
  display:inline-block;
  height: 12px;
}
.chart {
  line-height: 0;
}
.cover-empty {
    background: white;
}
.cover-full {
    border-right: none !important;
}
pre.prettyprint {
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
}
.com { color: #999 !important; }
.ignore-none { color: #999; font-weight: normal; }

.wrapper {
  min-height: 100%;
  height: auto !important;
  height: 100%;
  margin: 0 auto -48px;
}
.footer, .push {
  height: 48px;
}



================================================
File: coverage/block-navigation.js
================================================
/* eslint-disable */
var jumpToCode = (function init() {
    // Classes of code we would like to highlight in the file view
    var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];

    // Elements to highlight in the file listing view
    var fileListingElements = ['td.pct.low'];

    // We don't want to select elements that are direct descendants of another match
    var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > '; // becomes `:not(a):not(b) > `

    // Selecter that finds elements on the page to which we can jump
    var selector =
        fileListingElements.join(', ') +
        ', ' +
        notSelector +
        missingCoverageClasses.join(', ' + notSelector); // becomes `:not(a):not(b) > a, :not(a):not(b) > b`

    // The NodeList of matching elements
    var missingCoverageElements = document.querySelectorAll(selector);

    var currentIndex;

    function toggleClass(index) {
        missingCoverageElements
            .item(currentIndex)
            .classList.remove('highlighted');
        missingCoverageElements.item(index).classList.add('highlighted');
    }

    function makeCurrent(index) {
        toggleClass(index);
        currentIndex = index;
        missingCoverageElements.item(index).scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'center'
        });
    }

    function goToPrevious() {
        var nextIndex = 0;
        if (typeof currentIndex !== 'number' || currentIndex === 0) {
            nextIndex = missingCoverageElements.length - 1;
        } else if (missingCoverageElements.length > 1) {
            nextIndex = currentIndex - 1;
        }

        makeCurrent(nextIndex);
    }

    function goToNext() {
        var nextIndex = 0;

        if (
            typeof currentIndex === 'number' &&
            currentIndex < missingCoverageElements.length - 1
        ) {
            nextIndex = currentIndex + 1;
        }

        makeCurrent(nextIndex);
    }

    return function jump(event) {
        if (
            document.getElementById('fileSearch') === document.activeElement &&
            document.activeElement != null
        ) {
            // if we're currently focused on the search input, we don't want to navigate
            return;
        }

        switch (event.which) {
            case 78: // n
            case 74: // j
                goToNext();
                break;
            case 66: // b
            case 75: // k
            case 80: // p
                goToPrevious();
                break;
        }
    };
})();
window.addEventListener('keydown', jumpToCode);



================================================
File: coverage/index.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for All files</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="prettify.css" />
    <link rel="stylesheet" href="base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1>All files</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">70.66% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>318/450</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">81.81% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>54/66</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">92.3% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>24/26</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">70.66% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>318/450</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line medium'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="src"><a href="src/index.html">src</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="100" class="abs low">0/100</td>
	<td data-value="66.66" class="pct medium">66.66%</td>
	<td data-value="3" class="abs medium">2/3</td>
	<td data-value="66.66" class="pct medium">66.66%</td>
	<td data-value="3" class="abs medium">2/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="100" class="abs low">0/100</td>
	</tr>

<tr>
	<td class="file high" data-value="src/lib"><a href="src/lib/index.html">src/lib</a></td>
	<td data-value="92.26" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 92%"></div><div class="cover-empty" style="width: 8%"></div></div>
	</td>
	<td data-value="92.26" class="pct high">92.26%</td>
	<td data-value="181" class="abs high">167/181</td>
	<td data-value="89.28" class="pct high">89.28%</td>
	<td data-value="28" class="abs high">25/28</td>
	<td data-value="90.9" class="pct high">90.9%</td>
	<td data-value="11" class="abs high">10/11</td>
	<td data-value="92.26" class="pct high">92.26%</td>
	<td data-value="181" class="abs high">167/181</td>
	</tr>

<tr>
	<td class="file high" data-value="src/prompts"><a href="src/prompts/index.html">src/prompts</a></td>
	<td data-value="94" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 94%"></div><div class="cover-empty" style="width: 6%"></div></div>
	</td>
	<td data-value="94" class="pct high">94%</td>
	<td data-value="100" class="abs high">94/100</td>
	<td data-value="85" class="pct high">85%</td>
	<td data-value="20" class="abs high">17/20</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="8" class="abs high">8/8</td>
	<td data-value="94" class="pct high">94%</td>
	<td data-value="100" class="abs high">94/100</td>
	</tr>

<tr>
	<td class="file high" data-value="src/utils"><a href="src/utils/index.html">src/utils</a></td>
	<td data-value="82.6" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 82%"></div><div class="cover-empty" style="width: 18%"></div></div>
	</td>
	<td data-value="82.6" class="pct high">82.6%</td>
	<td data-value="69" class="abs high">57/69</td>
	<td data-value="66.66" class="pct medium">66.66%</td>
	<td data-value="15" class="abs medium">10/15</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="4" class="abs high">4/4</td>
	<td data-value="82.6" class="pct high">82.6%</td>
	<td data-value="69" class="abs high">57/69</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="sorter.js"></script>
        <script src="block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/prettify.css
================================================
.pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.pun,.opn,.clo{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun,.opn,.clo{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}



================================================
File: coverage/prettify.js
================================================
/* eslint-disable */
window.PR_SHOULD_USE_CONTINUATION=true;(function(){var h=["break,continue,do,else,for,if,return,while"];var u=[h,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];var p=[u,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"];var l=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"];var x=[p,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"];var R=[x,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"];var r="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes";var w=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"];var s="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END";var I=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"];var f=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"];var H=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"];var A=[l,R,w,s+I,f,H];var e=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/;var C="str";var z="kwd";var j="com";var O="typ";var G="lit";var L="pun";var F="pln";var m="tag";var E="dec";var J="src";var P="atn";var n="atv";var N="nocode";var M="(?:^^\\.?|[+-]|\\!|\\!=|\\!==|\\#|\\%|\\%=|&|&&|&&=|&=|\\(|\\*|\\*=|\\+=|\\,|\\-=|\\->|\\/|\\/=|:|::|\\;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\@|\\[|\\^|\\^=|\\^\\^|\\^\\^=|\\{|\\||\\|=|\\|\\||\\|\\|=|\\~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*";function k(Z){var ad=0;var S=false;var ac=false;for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.ignoreCase){ac=true}else{if(/[a-z]/i.test(ae.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){S=true;ac=false;break}}}var Y={b:8,t:9,n:10,v:11,f:12,r:13};function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if("0"<=af&&af<="7"){return parseInt(ah.substring(1),8)}else{if(af==="u"||af==="x"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}}function T(af){if(af<32){return(af<16?"\\x0":"\\x")+af.toString(16)}var ag=String.fromCharCode(af);if(ag==="\\"||ag==="-"||ag==="["||ag==="]"){ag="\\"+ag}return ag}function X(am){var aq=am.substring(1,am.length-1).match(new RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g"));var ak=[];var af=[];var ao=aq[0]==="^";for(var ar=ao?1:0,aj=aq.length;ar<aj;++ar){var ah=aq[ar];if(/\\[bdsw]/i.test(ah)){ak.push(ah)}else{var ag=ab(ah);var al;if(ar+2<aj&&"-"===aq[ar+1]){al=ab(aq[ar+2]);ar+=2}else{al=ag}af.push([ag,al]);if(!(al<65||ag>122)){if(!(al<65||ag>90)){af.push([Math.max(65,ag)|32,Math.min(al,90)|32])}if(!(al<97||ag>122)){af.push([Math.max(97,ag)&~32,Math.min(al,122)&~32])}}}}af.sort(function(av,au){return(av[0]-au[0])||(au[1]-av[1])});var ai=[];var ap=[NaN,NaN];for(var ar=0;ar<af.length;++ar){var at=af[ar];if(at[0]<=ap[1]+1){ap[1]=Math.max(ap[1],at[1])}else{ai.push(ap=at)}}var an=["["];if(ao){an.push("^")}an.push.apply(an,ak);for(var ar=0;ar<ai.length;++ar){var at=ai[ar];an.push(T(at[0]));if(at[1]>at[0]){if(at[1]+1>at[0]){an.push("-")}an.push(T(at[1]))}}an.push("]");return an.join("")}function W(al){var aj=al.source.match(new RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g"));var ah=aj.length;var an=[];for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){an[af]=-1}}}}for(var ak=1;ak<an.length;++ak){if(-1===an[ak]){an[ak]=++ad}}for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am;if(an[am]===undefined){aj[ak]="(?:"}}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){aj[ak]="\\"+an[am]}}}}for(var ak=0,am=0;ak<ah;++ak){if("^"===aj[ak]&&"^"!==aj[ak+1]){aj[ak]=""}}if(al.ignoreCase&&S){for(var ak=0;ak<ah;++ak){var ag=aj[ak];var ai=ag.charAt(0);if(ag.length>=2&&ai==="["){aj[ak]=X(ag)}else{if(ai!=="\\"){aj[ak]=ag.replace(/[a-zA-Z]/g,function(ao){var ap=ao.charCodeAt(0);return"["+String.fromCharCode(ap&~32,ap|32)+"]"})}}}}return aj.join("")}var aa=[];for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.global||ae.multiline){throw new Error(""+ae)}aa.push("(?:"+W(ae)+")")}return new RegExp(aa.join("|"),ac?"gi":"g")}function a(V){var U=/(?:^|\s)nocode(?:\s|$)/;var X=[];var T=0;var Z=[];var W=0;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=document.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Y=S&&"pre"===S.substring(0,3);function aa(ab){switch(ab.nodeType){case 1:if(U.test(ab.className)){return}for(var ae=ab.firstChild;ae;ae=ae.nextSibling){aa(ae)}var ad=ab.nodeName;if("BR"===ad||"LI"===ad){X[W]="\n";Z[W<<1]=T++;Z[(W++<<1)|1]=ab}break;case 3:case 4:var ac=ab.nodeValue;if(ac.length){if(!Y){ac=ac.replace(/[ \t\r\n]+/g," ")}else{ac=ac.replace(/\r\n?/g,"\n")}X[W]=ac;Z[W<<1]=T;T+=ac.length;Z[(W++<<1)|1]=ab}break}}aa(V);return{sourceCode:X.join("").replace(/\n$/,""),spans:Z}}function B(S,U,W,T){if(!U){return}var V={sourceCode:U,basePos:S};W(V);T.push.apply(T,V.decorations)}var v=/\S/;function o(S){var V=undefined;for(var U=S.firstChild;U;U=U.nextSibling){var T=U.nodeType;V=(T===1)?(V?S:U):(T===3)?(v.test(U.nodeValue)?S:V):V}return V===S?undefined:V}function g(U,T){var S={};var V;(function(){var ad=U.concat(T);var ah=[];var ag={};for(var ab=0,Z=ad.length;ab<Z;++ab){var Y=ad[ab];var ac=Y[3];if(ac){for(var ae=ac.length;--ae>=0;){S[ac.charAt(ae)]=Y}}var af=Y[1];var aa=""+af;if(!ag.hasOwnProperty(aa)){ah.push(af);ag[aa]=null}}ah.push(/[\0-\uffff]/);V=k(ah)})();var X=T.length;var W=function(ah){var Z=ah.sourceCode,Y=ah.basePos;var ad=[Y,F];var af=0;var an=Z.match(V)||[];var aj={};for(var ae=0,aq=an.length;ae<aq;++ae){var ag=an[ae];var ap=aj[ag];var ai=void 0;var am;if(typeof ap==="string"){am=false}else{var aa=S[ag.charAt(0)];if(aa){ai=ag.match(aa[1]);ap=aa[0]}else{for(var ao=0;ao<X;++ao){aa=T[ao];ai=ag.match(aa[1]);if(ai){ap=aa[0];break}}if(!ai){ap=F}}am=ap.length>=5&&"lang-"===ap.substring(0,5);if(am&&!(ai&&typeof ai[1]==="string")){am=false;ap=J}if(!am){aj[ag]=ap}}var ab=af;af+=ag.length;if(!am){ad.push(Y+ab,ap)}else{var al=ai[1];var ak=ag.indexOf(al);var ac=ak+al.length;if(ai[2]){ac=ag.length-ai[2].length;ak=ac-al.length}var ar=ap.substring(5);B(Y+ab,ag.substring(0,ak),W,ad);B(Y+ab+ak,al,q(ar,al),ad);B(Y+ab+ac,ag.substring(ac),W,ad)}}ah.decorations=ad};return W}function i(T){var W=[],S=[];if(T.tripleQuotedStrings){W.push([C,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""])}else{if(T.multiLineStrings){W.push([C,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"])}else{W.push([C,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"])}}if(T.verbatimStrings){S.push([C,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null])}var Y=T.hashComments;if(Y){if(T.cStyleComments){if(Y>1){W.push([j,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"])}else{W.push([j,/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"])}S.push([C,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/,null])}else{W.push([j,/^#[^\r\n]*/,null,"#"])}}if(T.cStyleComments){S.push([j,/^\/\/[^\r\n]*/,null]);S.push([j,/^\/\*[\s\S]*?(?:\*\/|$)/,null])}if(T.regexLiterals){var X=("/(?=[^/*])(?:[^/\\x5B\\x5C]|\\x5C[\\s\\S]|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+/");S.push(["lang-regex",new RegExp("^"+M+"("+X+")")])}var V=T.types;if(V){S.push([O,V])}var U=(""+T.keywords).replace(/^ | $/g,"");if(U.length){S.push([z,new RegExp("^(?:"+U.replace(/[\s,]+/g,"|")+")\\b"),null])}W.push([F,/^\s+/,null," \r\n\t\xA0"]);S.push([G,/^@[a-z_$][a-z_$@0-9]*/i,null],[O,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[F,/^[a-z_$][a-z_$@0-9]*/i,null],[G,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[F,/^\\[\s\S]?/,null],[L,/^.[^\s\w\.$@\'\"\`\/\#\\]*/,null]);return g(W,S)}var K=i({keywords:A,hashComments:true,cStyleComments:true,multiLineStrings:true,regexLiterals:true});function Q(V,ag){var U=/(?:^|\s)nocode(?:\s|$)/;var ab=/\r\n?|\n/;var ac=V.ownerDocument;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=ac.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Z=S&&"pre"===S.substring(0,3);var af=ac.createElement("LI");while(V.firstChild){af.appendChild(V.firstChild)}var W=[af];function ae(al){switch(al.nodeType){case 1:if(U.test(al.className)){break}if("BR"===al.nodeName){ad(al);if(al.parentNode){al.parentNode.removeChild(al)}}else{for(var an=al.firstChild;an;an=an.nextSibling){ae(an)}}break;case 3:case 4:if(Z){var am=al.nodeValue;var aj=am.match(ab);if(aj){var ai=am.substring(0,aj.index);al.nodeValue=ai;var ah=am.substring(aj.index+aj[0].length);if(ah){var ak=al.parentNode;ak.insertBefore(ac.createTextNode(ah),al.nextSibling)}ad(al);if(!ai){al.parentNode.removeChild(al)}}}break}}function ad(ak){while(!ak.nextSibling){ak=ak.parentNode;if(!ak){return}}function ai(al,ar){var aq=ar?al.cloneNode(false):al;var ao=al.parentNode;if(ao){var ap=ai(ao,1);var an=al.nextSibling;ap.appendChild(aq);for(var am=an;am;am=an){an=am.nextSibling;ap.appendChild(am)}}return aq}var ah=ai(ak.nextSibling,0);for(var aj;(aj=ah.parentNode)&&aj.nodeType===1;){ah=aj}W.push(ah)}for(var Y=0;Y<W.length;++Y){ae(W[Y])}if(ag===(ag|0)){W[0].setAttribute("value",ag)}var aa=ac.createElement("OL");aa.className="linenums";var X=Math.max(0,((ag-1))|0)||0;for(var Y=0,T=W.length;Y<T;++Y){af=W[Y];af.className="L"+((Y+X)%10);if(!af.firstChild){af.appendChild(ac.createTextNode("\xA0"))}aa.appendChild(af)}V.appendChild(aa)}function D(ac){var aj=/\bMSIE\b/.test(navigator.userAgent);var am=/\n/g;var al=ac.sourceCode;var an=al.length;var V=0;var aa=ac.spans;var T=aa.length;var ah=0;var X=ac.decorations;var Y=X.length;var Z=0;X[Y]=an;var ar,aq;for(aq=ar=0;aq<Y;){if(X[aq]!==X[aq+2]){X[ar++]=X[aq++];X[ar++]=X[aq++]}else{aq+=2}}Y=ar;for(aq=ar=0;aq<Y;){var at=X[aq];var ab=X[aq+1];var W=aq+2;while(W+2<=Y&&X[W+1]===ab){W+=2}X[ar++]=at;X[ar++]=ab;aq=W}Y=X.length=ar;var ae=null;while(ah<T){var af=aa[ah];var S=aa[ah+2]||an;var ag=X[Z];var ap=X[Z+2]||an;var W=Math.min(S,ap);var ak=aa[ah+1];var U;if(ak.nodeType!==1&&(U=al.substring(V,W))){if(aj){U=U.replace(am,"\r")}ak.nodeValue=U;var ai=ak.ownerDocument;var ao=ai.createElement("SPAN");ao.className=X[Z+1];var ad=ak.parentNode;ad.replaceChild(ao,ak);ao.appendChild(ak);if(V<S){aa[ah+1]=ak=ai.createTextNode(al.substring(W,S));ad.insertBefore(ak,ao.nextSibling)}}V=W;if(V>=S){ah+=2}if(V>=ap){Z+=2}}}var t={};function c(U,V){for(var S=V.length;--S>=0;){var T=V[S];if(!t.hasOwnProperty(T)){t[T]=U}else{if(window.console){console.warn("cannot override language handler %s",T)}}}}function q(T,S){if(!(T&&t.hasOwnProperty(T))){T=/^\s*</.test(S)?"default-markup":"default-code"}return t[T]}c(K,["default-code"]);c(g([],[[F,/^[^<?]+/],[E,/^<!\w[^>]*(?:>|$)/],[j,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[L,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);c(g([[F,/^[\s]+/,null," \t\r\n"],[n,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[m,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[P,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[L,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);c(g([],[[n,/^[\s\S]+/]]),["uq.val"]);c(i({keywords:l,hashComments:true,cStyleComments:true,types:e}),["c","cc","cpp","cxx","cyc","m"]);c(i({keywords:"null,true,false"}),["json"]);c(i({keywords:R,hashComments:true,cStyleComments:true,verbatimStrings:true,types:e}),["cs"]);c(i({keywords:x,cStyleComments:true}),["java"]);c(i({keywords:H,hashComments:true,multiLineStrings:true}),["bsh","csh","sh"]);c(i({keywords:I,hashComments:true,multiLineStrings:true,tripleQuotedStrings:true}),["cv","py"]);c(i({keywords:s,hashComments:true,multiLineStrings:true,regexLiterals:true}),["perl","pl","pm"]);c(i({keywords:f,hashComments:true,multiLineStrings:true,regexLiterals:true}),["rb"]);c(i({keywords:w,cStyleComments:true,regexLiterals:true}),["js"]);c(i({keywords:r,hashComments:3,cStyleComments:true,multilineStrings:true,tripleQuotedStrings:true,regexLiterals:true}),["coffee"]);c(g([],[[C,/^[\s\S]+/]]),["regex"]);function d(V){var U=V.langExtension;try{var S=a(V.sourceNode);var T=S.sourceCode;V.sourceCode=T;V.spans=S.spans;V.basePos=0;q(U,T)(V);D(V)}catch(W){if("console" in window){console.log(W&&W.stack?W.stack:W)}}}function y(W,V,U){var S=document.createElement("PRE");S.innerHTML=W;if(U){Q(S,U)}var T={langExtension:V,numberLines:U,sourceNode:S};d(T);return S.innerHTML}function b(ad){function Y(af){return document.getElementsByTagName(af)}var ac=[Y("pre"),Y("code"),Y("xmp")];var T=[];for(var aa=0;aa<ac.length;++aa){for(var Z=0,V=ac[aa].length;Z<V;++Z){T.push(ac[aa][Z])}}ac=null;var W=Date;if(!W.now){W={now:function(){return +(new Date)}}}var X=0;var S;var ab=/\blang(?:uage)?-([\w.]+)(?!\S)/;var ae=/\bprettyprint\b/;function U(){var ag=(window.PR_SHOULD_USE_CONTINUATION?W.now()+250:Infinity);for(;X<T.length&&W.now()<ag;X++){var aj=T[X];var ai=aj.className;if(ai.indexOf("prettyprint")>=0){var ah=ai.match(ab);var am;if(!ah&&(am=o(aj))&&"CODE"===am.tagName){ah=am.className.match(ab)}if(ah){ah=ah[1]}var al=false;for(var ak=aj.parentNode;ak;ak=ak.parentNode){if((ak.tagName==="pre"||ak.tagName==="code"||ak.tagName==="xmp")&&ak.className&&ak.className.indexOf("prettyprint")>=0){al=true;break}}if(!al){var af=aj.className.match(/\blinenums\b(?::(\d+))?/);af=af?af[1]&&af[1].length?+af[1]:true:false;if(af){Q(aj,af)}S={langExtension:ah,sourceNode:aj,numberLines:af};d(S)}}}if(X<T.length){setTimeout(U,250)}else{if(ad){ad()}}}U()}window.prettyPrintOne=y;window.prettyPrint=b;window.PR={createSimpleLexer:g,registerLangHandler:c,sourceDecorator:i,PR_ATTRIB_NAME:P,PR_ATTRIB_VALUE:n,PR_COMMENT:j,PR_DECLARATION:E,PR_KEYWORD:z,PR_LITERAL:G,PR_NOCODE:N,PR_PLAIN:F,PR_PUNCTUATION:L,PR_SOURCE:J,PR_STRING:C,PR_TAG:m,PR_TYPE:O}})();PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_DECLARATION,/^<!\w[^>]*(?:>|$)/],[PR.PR_COMMENT,/^<\!--[\s\S]*?(?:-\->|$)/],[PR.PR_PUNCTUATION,/^(?:<[%?]|[%?]>)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-handlebars",/^<script\b[^>]*type\s*=\s*['"]?text\/x-handlebars-template['"]?\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i],[PR.PR_DECLARATION,/^{{[#^>/]?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{&?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{{>?\s*[\w.][^}]*}}}/],[PR.PR_COMMENT,/^{{![^}]*}}/]]),["handlebars","hbs"]);PR.registerLangHandler(PR.createSimpleLexer([[PR.PR_PLAIN,/^[ \t\r\n\f]+/,null," \t\r\n\f"]],[[PR.PR_STRING,/^\"(?:[^\n\r\f\\\"]|\\(?:\r\n?|\n|\f)|\\[\s\S])*\"/,null],[PR.PR_STRING,/^\'(?:[^\n\r\f\\\']|\\(?:\r\n?|\n|\f)|\\[\s\S])*\'/,null],["lang-css-str",/^url\(([^\)\"\']*)\)/i],[PR.PR_KEYWORD,/^(?:url|rgb|\!important|@import|@page|@media|@charset|inherit)(?=[^\-\w]|$)/i,null],["lang-css-kw",/^(-?(?:[_a-z]|(?:\\[0-9a-f]+ ?))(?:[_a-z0-9\-]|\\(?:\\[0-9a-f]+ ?))*)\s*:/i],[PR.PR_COMMENT,/^\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//],[PR.PR_COMMENT,/^(?:<!--|-->)/],[PR.PR_LITERAL,/^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i],[PR.PR_LITERAL,/^#(?:[0-9a-f]{3}){1,2}/i],[PR.PR_PLAIN,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i],[PR.PR_PUNCTUATION,/^[^\s\w\'\"]+/]]),["css"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_KEYWORD,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i]]),["css-kw"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_STRING,/^[^\)\"\']+/]]),["css-str"]);



================================================
File: coverage/sorter.js
================================================
/* eslint-disable */
var addSorting = (function() {
    'use strict';
    var cols,
        currentSort = {
            index: 0,
            desc: false
        };

    // returns the summary table element
    function getTable() {
        return document.querySelector('.coverage-summary');
    }
    // returns the thead element of the summary table
    function getTableHeader() {
        return getTable().querySelector('thead tr');
    }
    // returns the tbody element of the summary table
    function getTableBody() {
        return getTable().querySelector('tbody');
    }
    // returns the th element for nth column
    function getNthColumn(n) {
        return getTableHeader().querySelectorAll('th')[n];
    }

    function onFilterInput() {
        const searchValue = document.getElementById('fileSearch').value;
        const rows = document.getElementsByTagName('tbody')[0].children;
        for (let i = 0; i < rows.length; i++) {
            const row = rows[i];
            if (
                row.textContent
                    .toLowerCase()
                    .includes(searchValue.toLowerCase())
            ) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        }
    }

    // loads the search box
    function addSearchBox() {
        var template = document.getElementById('filterTemplate');
        var templateClone = template.content.cloneNode(true);
        templateClone.getElementById('fileSearch').oninput = onFilterInput;
        template.parentElement.appendChild(templateClone);
    }

    // loads all columns
    function loadColumns() {
        var colNodes = getTableHeader().querySelectorAll('th'),
            colNode,
            cols = [],
            col,
            i;

        for (i = 0; i < colNodes.length; i += 1) {
            colNode = colNodes[i];
            col = {
                key: colNode.getAttribute('data-col'),
                sortable: !colNode.getAttribute('data-nosort'),
                type: colNode.getAttribute('data-type') || 'string'
            };
            cols.push(col);
            if (col.sortable) {
                col.defaultDescSort = col.type === 'number';
                colNode.innerHTML =
                    colNode.innerHTML + '<span class="sorter"></span>';
            }
        }
        return cols;
    }
    // attaches a data attribute to every tr element with an object
    // of data values keyed by column name
    function loadRowData(tableRow) {
        var tableCols = tableRow.querySelectorAll('td'),
            colNode,
            col,
            data = {},
            i,
            val;
        for (i = 0; i < tableCols.length; i += 1) {
            colNode = tableCols[i];
            col = cols[i];
            val = colNode.getAttribute('data-value');
            if (col.type === 'number') {
                val = Number(val);
            }
            data[col.key] = val;
        }
        return data;
    }
    // loads all row data
    function loadData() {
        var rows = getTableBody().querySelectorAll('tr'),
            i;

        for (i = 0; i < rows.length; i += 1) {
            rows[i].data = loadRowData(rows[i]);
        }
    }
    // sorts the table using the data for the ith column
    function sortByIndex(index, desc) {
        var key = cols[index].key,
            sorter = function(a, b) {
                a = a.data[key];
                b = b.data[key];
                return a < b ? -1 : a > b ? 1 : 0;
            },
            finalSorter = sorter,
            tableBody = document.querySelector('.coverage-summary tbody'),
            rowNodes = tableBody.querySelectorAll('tr'),
            rows = [],
            i;

        if (desc) {
            finalSorter = function(a, b) {
                return -1 * sorter(a, b);
            };
        }

        for (i = 0; i < rowNodes.length; i += 1) {
            rows.push(rowNodes[i]);
            tableBody.removeChild(rowNodes[i]);
        }

        rows.sort(finalSorter);

        for (i = 0; i < rows.length; i += 1) {
            tableBody.appendChild(rows[i]);
        }
    }
    // removes sort indicators for current column being sorted
    function removeSortIndicators() {
        var col = getNthColumn(currentSort.index),
            cls = col.className;

        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');
        col.className = cls;
    }
    // adds sort indicators for current column being sorted
    function addSortIndicators() {
        getNthColumn(currentSort.index).className += currentSort.desc
            ? ' sorted-desc'
            : ' sorted';
    }
    // adds event listeners for all sorter widgets
    function enableUI() {
        var i,
            el,
            ithSorter = function ithSorter(i) {
                var col = cols[i];

                return function() {
                    var desc = col.defaultDescSort;

                    if (currentSort.index === i) {
                        desc = !currentSort.desc;
                    }
                    sortByIndex(i, desc);
                    removeSortIndicators();
                    currentSort.index = i;
                    currentSort.desc = desc;
                    addSortIndicators();
                };
            };
        for (i = 0; i < cols.length; i += 1) {
            if (cols[i].sortable) {
                // add the click event handler on the th so users
                // dont have to click on those tiny arrows
                el = getNthColumn(i).querySelector('.sorter').parentElement;
                if (el.addEventListener) {
                    el.addEventListener('click', ithSorter(i));
                } else {
                    el.attachEvent('onclick', ithSorter(i));
                }
            }
        }
    }
    // adds sorting functionality to the UI
    return function() {
        if (!getTable()) {
            return;
        }
        cols = loadColumns();
        loadData();
        addSearchBox();
        addSortIndicators();
        enableUI();
    };
})();

window.addEventListener('load', addSorting);



================================================
File: coverage/src/cli.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/cli.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> cli.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/88</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/88</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a></td><td class="line-coverage quiet"><span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js"><span class="cstat-no" title="statement not covered" >import { cancel, intro, isCancel, spinner } from "@clack/prompts";<span class="fstat-no" title="function not covered" ><span class="branch-0 cbranch-no" title="branch not covered" ></span></span></span>
<span class="cstat-no" title="statement not covered" >import { Command } from "commander";</span>
<span class="cstat-no" title="statement not covered" >import path from "node:path";</span>
<span class="cstat-no" title="statement not covered" >import pc from "picocolors";</span>
&nbsp;
import type { BackendSetup, DatabaseProvider, ProjectOptions } from "./types";
&nbsp;
<span class="cstat-no" title="statement not covered" >import { generateProject } from "./lib/project-generator";</span>
<span class="cstat-no" title="statement not covered" >import { promptBackendSetup } from "./prompts/backend-setup";</span>
<span class="cstat-no" title="statement not covered" >import { promptDatabaseProvider } from "./prompts/database-provider";</span>
<span class="cstat-no" title="statement not covered" >import { promptProjectName } from "./prompts/project-name";</span>
<span class="cstat-no" title="statement not covered" >import { promptInitGit, promptInstallDependencies, promptSetupVsCodeSettings, promptUseNix } from "./prompts/yes-no";</span>
<span class="cstat-no" title="statement not covered" >import { handleDirectoryConflict } from "./utils/directory-handler";</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >const PACKAGE_ROOT = path.join(__dirname, "../");</span>
/**
 * Main CLI entry point for the matt-init tool.
 * This sets up a Next.js app with various options based on user input or command line flags.
 *
 * @returns {Promise&lt;void&gt;} Resolves when the CLI has completed its execution.
 */
<span class="cstat-no" title="statement not covered" >export async function runCLI() {</span>
<span class="cstat-no" title="statement not covered" >  const program = new Command()</span>
<span class="cstat-no" title="statement not covered" >    .name("matt-init")</span>
<span class="cstat-no" title="statement not covered" >    .description("Set up Next.js apps the way Matt likes 'em.")</span>
<span class="cstat-no" title="statement not covered" >    .argument("[dir]", "Name of the app directory")</span>
<span class="cstat-no" title="statement not covered" >    .option("--no-git", "Skip git initialization")</span>
<span class="cstat-no" title="statement not covered" >    .option("--no-install", "Skip package installation")</span>
<span class="cstat-no" title="statement not covered" >    .option("--no-nix", "Skip Nix flake for environment management")</span>
<span class="cstat-no" title="statement not covered" >    .option("--no-vscode", "Skip VS Code settings setup")</span>
<span class="cstat-no" title="statement not covered" >    .option("-y, --default", "Use defaults, skip prompts")</span>
<span class="cstat-no" title="statement not covered" >    .version("1.0.0")</span>
<span class="cstat-no" title="statement not covered" >    .parse(process.argv);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  const cliProvidedName = program.args[0];</span>
<span class="cstat-no" title="statement not covered" >  const options = program.opts();</span>
&nbsp;
  // Start the interactive flow
<span class="cstat-no" title="statement not covered" >  intro(pc.bgGreen(pc.black(" matt-init ")));</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  let projectName = cliProvidedName;</span>
<span class="cstat-no" title="statement not covered" >  let shouldInitGit = !options.noGit;</span>
<span class="cstat-no" title="statement not covered" >  let shouldInstall = !options.noInstall;</span>
<span class="cstat-no" title="statement not covered" >  let shouldUseNix = !options.noNix;</span>
<span class="cstat-no" title="statement not covered" >  let shouldSetupVsCode = !options.noVscode;</span>
<span class="cstat-no" title="statement not covered" >  let backendSetup: BackendSetup = "none";</span>
<span class="cstat-no" title="statement not covered" >  let databaseProvider: DatabaseProvider = "none";</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  try {</span>
    // Interactive prompts if not using defaults
<span class="cstat-no" title="statement not covered" >    if (!options.default) {</span>
      // 1. Project name
<span class="cstat-no" title="statement not covered" >      if (!projectName) {</span>
<span class="cstat-no" title="statement not covered" >        const nameResult = await promptProjectName();</span>
<span class="cstat-no" title="statement not covered" >        projectName = nameResult.projectName;</span>
<span class="cstat-no" title="statement not covered" >      }</span>
&nbsp;
      // 2. Backend setup
<span class="cstat-no" title="statement not covered" >      backendSetup = await promptBackendSetup();</span>
&nbsp;
      // 3. Database provider (only if drizzle backend setup chosen)
<span class="cstat-no" title="statement not covered" >      if (backendSetup === "drizzle") {</span>
<span class="cstat-no" title="statement not covered" >        databaseProvider = await promptDatabaseProvider();</span>
<span class="cstat-no" title="statement not covered" >      }</span>
&nbsp;
      // 4. Quick yes/no prompts
<span class="cstat-no" title="statement not covered" >      if (options.nix) {</span>
<span class="cstat-no" title="statement not covered" >        shouldUseNix = await promptUseNix();</span>
<span class="cstat-no" title="statement not covered" >      }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >      if (options.vscode) {</span>
<span class="cstat-no" title="statement not covered" >        shouldSetupVsCode = await promptSetupVsCodeSettings();</span>
<span class="cstat-no" title="statement not covered" >      }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >      if (options.install !== false) {</span>
<span class="cstat-no" title="statement not covered" >        shouldInstall = await promptInstallDependencies();</span>
<span class="cstat-no" title="statement not covered" >      }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >      if (options.git !== false) {</span>
<span class="cstat-no" title="statement not covered" >        shouldInitGit = await promptInitGit();</span>
<span class="cstat-no" title="statement not covered" >      }</span>
<span class="cstat-no" title="statement not covered" >    }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (!projectName) {</span>
<span class="cstat-no" title="statement not covered" >      projectName = "my-app";</span>
<span class="cstat-no" title="statement not covered" >    }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    const projectDir = path.resolve(process.cwd(), projectName);</span>
<span class="cstat-no" title="statement not covered" >    const templateDir = path.join(PACKAGE_ROOT, "src", "templates");</span>
&nbsp;
    // Handle existing directory conflicts
<span class="cstat-no" title="statement not covered" >    await handleDirectoryConflict(projectDir, projectName);</span>
&nbsp;
    // Prepare project options
<span class="cstat-no" title="statement not covered" >    const projectOptions: ProjectOptions = {</span>
<span class="cstat-no" title="statement not covered" >      projectName,</span>
<span class="cstat-no" title="statement not covered" >      projectDir,</span>
<span class="cstat-no" title="statement not covered" >      templateDir,</span>
<span class="cstat-no" title="statement not covered" >      shouldUseNix,</span>
<span class="cstat-no" title="statement not covered" >      shouldSetupVsCode,</span>
<span class="cstat-no" title="statement not covered" >      shouldInitGit,</span>
<span class="cstat-no" title="statement not covered" >      shouldInstall,</span>
<span class="cstat-no" title="statement not covered" >      backendSetup,</span>
<span class="cstat-no" title="statement not covered" >      databaseProvider,</span>
<span class="cstat-no" title="statement not covered" >    };</span>
&nbsp;
    // Generate the project with spinner
<span class="cstat-no" title="statement not covered" >    const s = spinner();</span>
<span class="cstat-no" title="statement not covered" >    s.start("Creating your Next.js project...");</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    await generateProject(projectOptions);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    s.stop("Project created successfully!");</span>
<span class="cstat-no" title="statement not covered" >  }</span>
<span class="cstat-no" title="statement not covered" >  catch (error) {</span>
<span class="cstat-no" title="statement not covered" >    if (isCancel(error)) {</span>
<span class="cstat-no" title="statement not covered" >      cancel("Operation cancelled.");</span>
<span class="cstat-no" title="statement not covered" >      process.exit(0);</span>
<span class="cstat-no" title="statement not covered" >    }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    cancel("Something went wrong!");</span>
<span class="cstat-no" title="statement not covered" >    console.error(error);</span>
<span class="cstat-no" title="statement not covered" >    process.exit(1);</span>
<span class="cstat-no" title="statement not covered" >  }</span>
<span class="cstat-no" title="statement not covered" >}</span>
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/index.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> src</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/100</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">66.66% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>2/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">66.66% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>2/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/100</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="cli.ts"><a href="cli.ts.html">cli.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="88" class="abs low">0/88</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="1" class="abs low">0/1</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="1" class="abs low">0/1</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="88" class="abs low">0/88</td>
	</tr>

<tr>
	<td class="file low" data-value="index.ts"><a href="index.ts.html">index.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="12" class="abs low">0/12</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="12" class="abs low">0/12</td>
	</tr>

<tr>
	<td class="file empty" data-value="types.ts"><a href="types.ts.html">types.ts</a></td>
	<td data-value="0" class="pic empty">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct empty">0%</td>
	<td data-value="0" class="abs empty">0/0</td>
	<td data-value="0" class="pct empty">0%</td>
	<td data-value="1" class="abs empty">1/1</td>
	<td data-value="0" class="pct empty">0%</td>
	<td data-value="1" class="abs empty">1/1</td>
	<td data-value="0" class="pct empty">0%</td>
	<td data-value="0" class="abs empty">0/0</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/index.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/index.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> index.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/12</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/12</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">#!/usr/bin/env node
&nbsp;
<span class="cstat-no" title="statement not covered" >import pc from "picocolors";</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >import { runCLI } from "./cli";</span>
&nbsp;
/**
 * Main entry point for the application.
 * Executes the CLI runner and handles any errors that occur during execution.
 * If an error occurs, it logs the error message in red and exits the process with code 1.
 *
 * @returns A promise that resolves when the CLI execution completes successfully
 * @throws Will exit the process with code 1 if any error occurs during CLI execution
 */
<span class="cstat-no" title="statement not covered" >async function main() {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
<span class="cstat-no" title="statement not covered" >    await runCLI();</span>
<span class="cstat-no" title="statement not covered" >  }</span>
<span class="cstat-no" title="statement not covered" >  catch (error) {</span>
<span class="cstat-no" title="statement not covered" >    console.error(pc.red("An error occurred:"), error);</span>
<span class="cstat-no" title="statement not covered" >    process.exit(1);</span>
<span class="cstat-no" title="statement not covered" >  }</span>
<span class="cstat-no" title="statement not covered" >}</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >main();</span>
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/types.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/types.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">src</a> types.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/0</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/0</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">export type BackendSetup = "none" | "drizzle" | "supabase";
export type DatabaseProvider = "none" | "turso" | "neon" | "postgres";
&nbsp;
export type ProjectOptions = {
  projectName: string;
  projectDir: string;
  templateDir: string;
  shouldUseNix: boolean;
  shouldSetupVsCode?: boolean;
  shouldInitGit: boolean;
  shouldInstall: boolean;
  backendSetup: BackendSetup;
  databaseProvider: DatabaseProvider;
};
&nbsp;
export type PackageManager = "npm" | "yarn" | "pnpm" | "bun";
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/lib/db.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/lib/db.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/lib</a> db.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>31/31</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>31/31</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import fs from "fs-extra";
import path from "node:path";
&nbsp;
import { addPackageToDependencies, addScriptToPackageJson, generateRandomSecret } from "./utils";
&nbsp;
/**
 * Applies the Drizzle ORM setup for a Turso database in the specified project directory.
 * This function installs necessary packages, copies template files, sets up environment variables,
 * and adds scripts to package.json for database management.
 *
 * @param projectDir the directory of the project where Drizzle ORM will be set up
 * @param PACKAGE_ROOT the root directory of the package containing templates
 */
export async function applyDrizzleTurso(projectDir: string, PACKAGE_ROOT: string): Promise&lt;void&gt; {
  // dependencies
  await addPackageToDependencies(projectDir, "@libsql/client");
  await addPackageToDependencies(projectDir, "drizzle-orm");
  await addPackageToDependencies(projectDir, "better-auth");
&nbsp;
  // devDependencies
  await addPackageToDependencies(projectDir, "drizzle-kit", true);
  await addPackageToDependencies(projectDir, "concurrently", true);
&nbsp;
  // Copy the Drizzle setup template to the project directory
  const drizzleTemplatePath = path.join(PACKAGE_ROOT, "templates/backend/drizzle/turso");
  await fs.copy(drizzleTemplatePath, projectDir, {
    overwrite: true,
    errorOnExist: false,
  });
&nbsp;
  // Copy the .env.example file to .env
  const envExamplePath = path.join(projectDir, ".env.example");
  const envPath = path.join(projectDir, ".env");
  await fs.copyFile(envExamplePath, envPath);
&nbsp;
  // replace some .env values
  const envContent = await fs.readFile(envPath, "utf-8");
  const updatedEnvContent = envContent
    .replace("your_turso_database_url", "http://127.0.0.1:8080")
    .replace("your_better_auth_url", "https://localhost:3000")
    .replace("your_turso_auth_token", "# not needed for local development")
    .replace("your_better_auth_secret", await generateRandomSecret());
  await fs.writeFile(envPath, updatedEnvContent, "utf-8");
&nbsp;
  // Add Drizzle scripts to package.json
  await addScriptToPackageJson(projectDir, "db:migrate", "drizzle-kit migrate");
  await addScriptToPackageJson(projectDir, "db:generate", "drizzle-kit generate");
  await addScriptToPackageJson(projectDir, "db:push", "drizzle-kit push");
  await addScriptToPackageJson(projectDir, "db:studio", "drizzle-kit studio");
  await addScriptToPackageJson(projectDir, "dev:db", "turso dev --db-file local.db");
  await addScriptToPackageJson(projectDir, "dev", "concurrently \"pnpm run dev:db\" \"next dev --turbopack\"", true);
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/lib/index.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/lib</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> src/lib</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">92.26% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>167/181</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">89.28% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>25/28</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">90.9% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>10/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">92.26% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>167/181</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file high" data-value="db.ts"><a href="db.ts.html">db.ts</a></td>
	<td data-value="100" class="pic high">
	<div class="chart"><div class="cover-fill cover-full" style="width: 100%"></div><div class="cover-empty" style="width: 0%"></div></div>
	</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="31" class="abs high">31/31</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="31" class="abs high">31/31</td>
	</tr>

<tr>
	<td class="file high" data-value="project-generator.ts"><a href="project-generator.ts.html">project-generator.ts</a></td>
	<td data-value="87.36" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 87%"></div><div class="cover-empty" style="width: 13%"></div></div>
	</td>
	<td data-value="87.36" class="pct high">87.36%</td>
	<td data-value="95" class="abs high">83/95</td>
	<td data-value="84.61" class="pct high">84.61%</td>
	<td data-value="13" class="abs high">11/13</td>
	<td data-value="83.33" class="pct high">83.33%</td>
	<td data-value="6" class="abs high">5/6</td>
	<td data-value="87.36" class="pct high">87.36%</td>
	<td data-value="95" class="abs high">83/95</td>
	</tr>

<tr>
	<td class="file high" data-value="utils.ts"><a href="utils.ts.html">utils.ts</a></td>
	<td data-value="96.36" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 96%"></div><div class="cover-empty" style="width: 4%"></div></div>
	</td>
	<td data-value="96.36" class="pct high">96.36%</td>
	<td data-value="55" class="abs high">53/55</td>
	<td data-value="92.85" class="pct high">92.85%</td>
	<td data-value="14" class="abs high">13/14</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="4" class="abs high">4/4</td>
	<td data-value="96.36" class="pct high">96.36%</td>
	<td data-value="55" class="abs high">53/55</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/lib/project-generator.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/lib/project-generator.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/lib</a> project-generator.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">87.36% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>83/95</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">84.61% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>11/13</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">83.33% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>5/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">87.36% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>83/95</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-yes">19x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-yes">8x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import fs from "fs-extra";
import path from "node:path";
&nbsp;
import { findGitExecutable } from "~/utils/git";
import { detectPackageManager } from "~/utils/package-manager";
&nbsp;
import type { BackendSetup, DatabaseProvider, ProjectOptions } from "../types";
&nbsp;
import { applyDrizzleTurso } from "./db";
import { setProjectName } from "./utils";
&nbsp;
const PACKAGE_ROOT = path.resolve(__dirname, "../");
&nbsp;
/**
 * Generates a new project based on the provided options.
 * This function sets up the project structure, applies backend configurations,
 * sets up VS Code settings, initializes Git, and installs dependencies.
 *
 * @param {ProjectOptions} options The options for generating the project.
 * @returns {Promise&lt;void&gt;} A promise that resolves when the project is generated.
 */
export async function generateProject(options: ProjectOptions): Promise&lt;void&gt; {
  const targetPath = options.projectDir;
  await copyBaseTemplate(options.projectDir);
  // - Apply backend setup
  // - Configure database if needed
&nbsp;
  if (options.backendSetup === "drizzle") {
    if (options.databaseProvider === "turso") {
      await applyDrizzleTurso(targetPath, PACKAGE_ROOT);
    }
  }
&nbsp;
  if (options.shouldUseNix) {
    await applyNixFlake(targetPath, options.backendSetup, options.databaseProvider);
  }
&nbsp;
  if (options.shouldSetupVsCode) {
    await applyVsCodeSettings(targetPath);
  }
&nbsp;
  if (options.shouldInstall) <span class="branch-0 cbranch-no" title="branch not covered" >{</span>
<span class="cstat-no" title="statement not covered" >    await installDependencies(targetPath);</span>
<span class="cstat-no" title="statement not covered" >  }</span>
&nbsp;
  // do this at the very end to ensure all files are in place
  if (options.shouldInitGit) {
    await applyGitInit(targetPath);
  }
&nbsp;
  // clean up
  const gitignorePath = path.join(targetPath, "_gitignore");
  const newGitignorePath = path.join(targetPath, ".gitignore");
&nbsp;
  const eslintConfigPath = path.join(targetPath, "_eslint.config.mjs");
  const newEslintConfigPath = path.join(targetPath, "eslint.config.mjs");
&nbsp;
  await fs.rename(gitignorePath, newGitignorePath);
  await fs.rename(eslintConfigPath, newEslintConfigPath);
&nbsp;
  await setProjectName(targetPath, options.projectName);
}
&nbsp;
/**
 * Copies the base Next.js template to the target project directory.
 * This function uses fs-extra to copy the template files from the package root
 * to the specified project directory.
 *
 * @param targetPath The targetPath of the project.
 * @returns {Promise&lt;void&gt;} A promise that resolves when the template has been copied.
 */
async function copyBaseTemplate(targetPath: string): Promise&lt;void&gt; {
  // The base next.js template is located in src/templates/base
  const baseTemplatePath = path.join(PACKAGE_ROOT, "templates/base");
  // Use fs-extra to copy the base template to the target directory
  await fs.copy(baseTemplatePath, targetPath, {
    overwrite: true,
    errorOnExist: false,
  });
}
&nbsp;
/**
 * Applies the Nix flake configuration to the project directory.
 * This function copies the Nix flake template and applies specific configurations
 * based on the backend setup and database provider.
 *
 * @param projectDir The directory where the project is located.
 * @param backend The backend setup chosen for the project.
 * @param dbProvider The database provider chosen for the project.
 * @returns {Promise&lt;void&gt;} A promise that resolves when the Nix flake has been applied.
 */
async function applyNixFlake(projectDir: string, backend: BackendSetup, dbProvider: DatabaseProvider): Promise&lt;void&gt; {
  // Copy the Nix flake template to the project directory
  const nixTemplatePath = path.join(PACKAGE_ROOT, "templates/extras/nix/base");
  await fs.copy(nixTemplatePath, projectDir, {
    overwrite: true,
    errorOnExist: false,
  });
&nbsp;
  // TODO: Refactor for better extensibility
  if (backend === "drizzle" &amp;&amp; dbProvider === "turso") {
    // Copy the Drizzle + Turso Nix flake template
    const drizzleTursoNixPath = path.join(PACKAGE_ROOT, "templates/extras/nix/drizzle/turso");
    await fs.copy(drizzleTursoNixPath, projectDir, {
      overwrite: true,
      errorOnExist: false,
    });
  }
}
&nbsp;
/**
 * Initializes a Git repository in the project directory.
 * This function finds the Git executable, initializes a new Git repository,
 * sets the main branch to "main", and adds all files to the staging area.
 *
 * @param projectDir The directory where the project is located.
 * @returns {Promise&lt;void&gt;} A promise that resolves when the Git repository has been initialized.
 */
async function applyGitInit(projectDir: string): Promise&lt;void&gt; {
  const gitPath = await findGitExecutable();
&nbsp;
  if (!gitPath || typeof gitPath !== "string") <span class="branch-0 cbranch-no" title="branch not covered" >{</span>
<span class="cstat-no" title="statement not covered" >    throw new Error("Git is not installed or not found in PATH.");</span>
<span class="cstat-no" title="statement not covered" >  }</span>
&nbsp;
  const { execa } = await import("execa");
  await execa(gitPath, ["init"], {
    cwd: projectDir,
    stdio: "pipe",
  });
&nbsp;
  await execa(gitPath, ["branch", "-m", "main"], {
    cwd: projectDir,
    stdio: "pipe",
  });
&nbsp;
  await execa(gitPath, ["add", "."], {
    cwd: projectDir,
    stdio: "pipe",
  });
}
&nbsp;
/**
 * Applies VS Code settings and extensions to the project directory.
 * This function copies the VS Code settings and extensions configuration
 * from the package templates to the project's .vscode directory.
 *
 * @param projectDir The directory where the project is located.
 * @returns {Promise&lt;void&gt;} A promise that resolves when the VS Code settings have been applied.
 */
async function applyVsCodeSettings(projectDir: string): Promise&lt;void&gt; {
  const vscodeSettingsPath = path.join(PACKAGE_ROOT, "templates/extras/vscode/base/_settings.json");
  const vscodeExtensionsPath = path.join(PACKAGE_ROOT, "templates/extras/vscode/base/_extensions.json");
&nbsp;
  // Copy VS Code settings
  await fs.copy(vscodeSettingsPath, path.join(projectDir, ".vscode", "settings.json"), {
    overwrite: true,
    errorOnExist: false,
  });
  // Copy VS Code extensions
  await fs.copy(vscodeExtensionsPath, path.join(projectDir, ".vscode", "extensions.json"), {
    overwrite: true,
    errorOnExist: false,
  });
}
&nbsp;
/**
 * Installs project dependencies using the detected package manager.
 * This function uses execa to run the package manager's install command
 * in the specified project directory.
 *
 * @param projectDir The directory where the project is located.
 * @returns {Promise&lt;void&gt;} A promise that resolves when the dependencies have been installed.
 */
<span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >async function installDependencies(projectDir: string): Promise&lt;void&gt; {</span></span>
<span class="cstat-no" title="statement not covered" >  const packageManager = detectPackageManager();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  const { execa } = await import("execa");</span>
<span class="cstat-no" title="statement not covered" >  await execa(packageManager, ["install"], {</span>
<span class="cstat-no" title="statement not covered" >    cwd: projectDir,</span>
<span class="cstat-no" title="statement not covered" >    stdio: "pipe",</span>
<span class="cstat-no" title="statement not covered" >  });</span>
<span class="cstat-no" title="statement not covered" >}</span>
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/lib/utils.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/lib/utils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/lib</a> utils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">96.36% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>53/55</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">92.85% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>13/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>4/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">96.36% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>53/55</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">25x</span>
<span class="cline-any cline-yes">25x</span>
<span class="cline-any cline-yes">25x</span>
<span class="cline-any cline-yes">25x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-yes">42x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">35x</span>
<span class="cline-any cline-yes">35x</span>
<span class="cline-any cline-yes">35x</span>
<span class="cline-any cline-yes">35x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">51x</span>
<span class="cline-any cline-yes">17x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import fs from "fs-extra";
import { randomBytes } from "node:crypto";
import path from "node:path";
&nbsp;
/**
 * Adds a package to the project's dependencies or devDependencies in package.json.
 *
 * @param projectDir the directory of the project
 * @param packageName the name of the package to add
 * @param devDependency whether to add the package as a devDependency (default: false)
 */
export async function addPackageToDependencies(
  projectDir: string,
  packageName: string,
  devDependency: boolean = false,
): Promise&lt;void&gt; {
  const packageJsonPath = path.join(projectDir, "package.json");
  const packageJson = await fs.readJson(packageJsonPath);
&nbsp;
  if (devDependency) {
    packageJson.devDependencies = packageJson.devDependencies || {};
    packageJson.devDependencies[packageName] = "latest";
  }
  else {
    packageJson.dependencies = packageJson.dependencies || {};
    packageJson.dependencies[packageName] = "latest";
  }
&nbsp;
  await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });
}
&nbsp;
/**
 * Adds a script to the project's package.json scripts section.
 *
 * @param projectDir the directory of the project
 * @param scriptName the name of the script to add
 * @param scriptCommand the command for the script
 * @param updateExisting whether to update an existing script with the same name (default: false)
 */
export async function addScriptToPackageJson(
  projectDir: string,
  scriptName: string,
  scriptCommand: string,
  updateExisting: boolean = false,
): Promise&lt;void&gt; {
  const packageJsonPath = path.join(projectDir, "package.json");
  const packageJson = await fs.readJson(packageJsonPath);
  packageJson.scripts = packageJson.scripts || {};
&nbsp;
  if (!updateExisting &amp;&amp; packageJson.scripts[scriptName]) <span class="branch-0 cbranch-no" title="branch not covered" >{</span>
<span class="cstat-no" title="statement not covered" >    return;</span>
<span class="cstat-no" title="statement not covered" >  }</span>
&nbsp;
  packageJson.scripts[scriptName] = scriptCommand;
  await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });
}
&nbsp;
/**
 * Generates a random 64-character hexadecimal string to be used as a secret.
 *
 * @returns {Promise&lt;string&gt;} A promise that resolves to a random secret string.
 */
export async function generateRandomSecret(): Promise&lt;string&gt; {
  return randomBytes(32).toString("hex");
}
&nbsp;
/**
 * Sets the project name in various configuration files.
 * This function replaces the placeholder `__APP_NAME__` with the actual project name
 * in the specified files within the project directory.
 *
 * @param projectDir the directory of the project
 * @param projectName the name of the project to set
 */
export async function setProjectName(
  projectDir: string,
  projectName: string,
): Promise&lt;void&gt; {
  // this isn't comprehensive at all, and probably needs a refactor.
  // since we know what files the project name is used in, we can just
  // replace the placeholder with the actual project name.
&nbsp;
  const filesToUpdate = [
    path.join(projectDir, "package.json"),
    path.join(projectDir, "flake.nix"),
    path.join(projectDir, "nix", "devShell.nix"),
  ];
&nbsp;
  for (const filePath of filesToUpdate) {
    if (await fs.pathExists(filePath)) {
      let content = await fs.readFile(filePath, "utf-8");
      content = content.replace(/__APP_NAME__/g, projectName);
      await fs.writeFile(filePath, content, "utf-8");
    }
    // just skip if the file doesn't exist, this needs to be more robust
  }
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/prompts/backend-setup.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/prompts/backend-setup.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/prompts</a> backend-setup.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>22/22</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>3/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>22/22</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import { select } from "@clack/prompts";
&nbsp;
import type { BackendSetup } from "../types";
&nbsp;
/**
 * Prompts the user to select a backend setup for their project.
 *
 * @returns {Promise&lt;BackendSetup&gt;} The selected backend setup.
 */
export async function promptBackendSetup(): Promise&lt;BackendSetup&gt; {
  const backendSetup = await select({
    message: "Choose your backend setup:",
    options: [
      {
        value: "drizzle" as const,
        label: "Database + Drizzle + BetterAuth",
        hint: "Full-stack setup with type-safe DB and auth",
      },
      // {
      //   value: "supabase" as const,
      //   label: "Supabase",
      //   hint: "Hosted database with built-in auth",
      // },
      {
        value: "none" as const,
        label: "None",
        hint: "Just a clean Next.js frontend",
      },
    ],
  });
&nbsp;
  if (typeof backendSetup === "symbol") {
    process.exit(0);
  }
&nbsp;
  return backendSetup;
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/prompts/database-provider.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/prompts/database-provider.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/prompts</a> database-provider.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>17/17</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>2/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>17/17</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import { select } from "@clack/prompts";
&nbsp;
import type { DatabaseProvider } from "../types";
&nbsp;
/**
 * Prompts the user to select a database provider for their project.
 *
 * @returns {Promise&lt;DatabaseProvider&gt;} The selected database provider.
 */
export async function promptDatabaseProvider(): Promise&lt;DatabaseProvider&gt; {
  const databaseProvider = await select({
    message: "Choose your database provider:",
    options: [
      {
        value: "turso" as const,
        label: "Turso",
        hint: "Locally hostable SQLite",
      },
      // {
      //   value: "postgres" as const,
      //   label: "Docker Postgres",
      //   hint: "Local development with Docker",
      // },
    ],
  });
&nbsp;
  if (typeof databaseProvider === "symbol") {
    process.exit(0);
  }
&nbsp;
  return databaseProvider;
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/prompts/index.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/prompts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> src/prompts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">94% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>94/100</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">85% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>17/20</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>8/8</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">94% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>94/100</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file high" data-value="backend-setup.ts"><a href="backend-setup.ts.html">backend-setup.ts</a></td>
	<td data-value="100" class="pic high">
	<div class="chart"><div class="cover-fill cover-full" style="width: 100%"></div><div class="cover-empty" style="width: 0%"></div></div>
	</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="22" class="abs high">22/22</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="3" class="abs high">3/3</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="22" class="abs high">22/22</td>
	</tr>

<tr>
	<td class="file high" data-value="database-provider.ts"><a href="database-provider.ts.html">database-provider.ts</a></td>
	<td data-value="100" class="pic high">
	<div class="chart"><div class="cover-fill cover-full" style="width: 100%"></div><div class="cover-empty" style="width: 0%"></div></div>
	</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="17" class="abs high">17/17</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="2" class="abs high">2/2</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="17" class="abs high">17/17</td>
	</tr>

<tr>
	<td class="file high" data-value="project-name.ts"><a href="project-name.ts.html">project-name.ts</a></td>
	<td data-value="100" class="pic high">
	<div class="chart"><div class="cover-fill cover-full" style="width: 100%"></div><div class="cover-empty" style="width: 0%"></div></div>
	</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="20" class="abs high">20/20</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="7" class="abs high">7/7</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="2" class="abs high">2/2</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="20" class="abs high">20/20</td>
	</tr>

<tr>
	<td class="file high" data-value="yes-no.ts"><a href="yes-no.ts.html">yes-no.ts</a></td>
	<td data-value="85.36" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 85%"></div><div class="cover-empty" style="width: 15%"></div></div>
	</td>
	<td data-value="85.36" class="pct high">85.36%</td>
	<td data-value="41" class="abs high">35/41</td>
	<td data-value="62.5" class="pct medium">62.5%</td>
	<td data-value="8" class="abs medium">5/8</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="4" class="abs high">4/4</td>
	<td data-value="85.36" class="pct high">85.36%</td>
	<td data-value="41" class="abs high">35/41</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/prompts/project-name.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/prompts/project-name.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/prompts</a> project-name.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>20/20</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>7/7</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>2/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>20/20</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">7x</span>
<span class="cline-any cline-yes">7x</span>
<span class="cline-any cline-yes">7x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import { text } from "@clack/prompts";
&nbsp;
/**
 * Prompts the user for a project name and validates the input.
 *
 * @returns {Promise&lt;{ projectName: string }&gt;} The user's project name.
 */
export async function promptProjectName(): Promise&lt;{ projectName: string }&gt; {
  const projectName = await text({
    message: "What's your project name?",
    placeholder: "my-app",
    validate: validateProjectName,
  });
&nbsp;
  if (typeof projectName === "symbol") {
    process.exit(0);
  }
&nbsp;
  return { projectName };
}
&nbsp;
export function validateProjectName(value: string | undefined): string | undefined {
  if (!value)
    return "Project name is required";
  if (!/^[a-z0-9-]+$/.test(value)) {
    return "Project name must only contain lowercase letters, numbers, and hyphens";
  }
  return undefined;
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/prompts/yes-no.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/prompts/yes-no.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/prompts</a> yes-no.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">85.36% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>35/41</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">62.5% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>5/8</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>4/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">85.36% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>35/41</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import { confirm } from "@clack/prompts";
&nbsp;
/**
 * Prompts the user with a yes/no question and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise&lt;boolean&gt;} The user's response (true for yes, false for no).
 */
export async function promptUseNix(): Promise&lt;boolean&gt; {
  const useNix = await confirm({
    message: "Initialize with Nix flake?",
    initialValue: true,
  });
&nbsp;
  if (typeof useNix === "symbol") {
    process.exit(0);
  }
&nbsp;
  return useNix;
}
&nbsp;
/**
 * Prompts the user to install dependencies and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise&lt;boolean&gt;} The user's response (true for yes, false for no).
 */
export async function promptInstallDependencies(): Promise&lt;boolean&gt; {
  const installDeps = await confirm({
    message: "Install dependencies?",
    initialValue: true,
  });
&nbsp;
  if (typeof installDeps === "symbol") <span class="branch-0 cbranch-no" title="branch not covered" >{</span>
<span class="cstat-no" title="statement not covered" >    process.exit(0);</span>
<span class="cstat-no" title="statement not covered" >  }</span>
&nbsp;
  return installDeps;
}
&nbsp;
/**
 * Prompts the user to initialize a git repository and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise&lt;boolean&gt;} The user's response (true for yes, false for no).
 */
export async function promptInitGit(): Promise&lt;boolean&gt; {
  const initGit = await confirm({
    message: "Initialize git repository?",
    initialValue: true,
  });
&nbsp;
  if (typeof initGit === "symbol") <span class="branch-0 cbranch-no" title="branch not covered" >{</span>
<span class="cstat-no" title="statement not covered" >    process.exit(0);</span>
<span class="cstat-no" title="statement not covered" >  }</span>
&nbsp;
  return initGit;
}
&nbsp;
/**
 * Prompts the user to set up VS Code settings and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise&lt;boolean&gt;} The user's response (true for yes, false for no).
 */
export async function promptSetupVsCodeSettings(): Promise&lt;boolean&gt; {
  const setupVsCode = await confirm({
    message: "Setup VS Code settings?",
    initialValue: true,
  });
&nbsp;
  if (typeof setupVsCode === "symbol") {
    process.exit(0);
<span class="branch-0 cbranch-no" title="branch not covered" >  }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  return setupVsCode;</span>
<span class="cstat-no" title="statement not covered" >}</span>
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/utils/directory-handler.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/utils/directory-handler.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/utils</a> directory-handler.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">82.05% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>32/39</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">50% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>3/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>2/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">82.05% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>32/39</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a></td><td class="line-coverage quiet"><span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import fs from "fs-extra";
&nbsp;
/**
 * Handles the case where the target directory already exists and is not empty.
 *
 * @param projectDir the directory where the project will be created
 * @param projectName the name of the project, used for display purposes
 * @returns "overwrite" | "merge" | "cancel"
 */
export async function handleExistingDirectory(projectDir: string, projectName: string): Promise&lt;"overwrite" | "merge" | "cancel"&gt; {
  const { select, isCancel } = await import("@clack/prompts");
&nbsp;
  const choice = await select({
    message: `Directory "${projectName}" already exists and is not empty. What would you like to do?`,
    options: [
      { value: "overwrite", label: "Overwrite (delete existing content)" },
      { value: "merge", label: "Merge (keep existing files, add new ones)" },
      { value: "cancel", label: "Cancel operation" },
    ],
    initialValue: "cancel",
  });
&nbsp;
  if (isCancel(choice)) {
    return "cancel";
<span class="branch-0 cbranch-no" title="branch not covered" >  }</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  return choice as "overwrite" | "merge" | "cancel";</span>
<span class="cstat-no" title="statement not covered" >}</span>
&nbsp;
/**
 * Handles directory conflicts when creating a new project.
 *
 * @param projectDir the directory where the project will be created
 * @param projectName the name of the project, used for display purposes
 */
export async function handleDirectoryConflict(projectDir: string, projectName: string): Promise&lt;void&gt; {
  if (fs.existsSync(projectDir)) {
    const dirContents = fs.readdirSync(projectDir);
    if (dirContents.length &gt; 0) {
      const action = await handleExistingDirectory(projectDir, projectName);
&nbsp;
      switch (action) {
<span class="branch-0 cbranch-no" title="branch not covered" >        case "overwrite": {</span>
<span class="cstat-no" title="statement not covered" >          await fs.remove(projectDir);</span>
<span class="cstat-no" title="statement not covered" >          break;</span>
<span class="cstat-no" title="statement not covered" >        }</span>
<span class="branch-0 cbranch-no" title="branch not covered" >        case "merge": {</span>
          // Do nothing, let the copy operation merge/overwrite files
<span class="cstat-no" title="statement not covered" >          break;</span>
<span class="cstat-no" title="statement not covered" >        }</span>
        case "cancel": {
          const { cancel } = await import("@clack/prompts");
          cancel("Operation cancelled.");
          process.exit(0);
        }
      }
    }
  }
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/utils/git.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/utils/git.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/utils</a> git.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">70% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>7/10</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">50% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>1/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">70% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>7/10</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line medium'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-yes">9x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">/**
 * Utility function to find the path to the git executable.
 *
 * @returns {Promise&lt;string | Error&gt;} Resolves with the path to the git executable or an error if not found.
 */
export async function findGitExecutable(): Promise&lt;string | Error&gt; {
  const { execa } = await import("execa");
&nbsp;
  try {
    const { stdout } = await execa("which", ["git"]);
    return stdout.trim();
<span class="branch-0 cbranch-no" title="branch not covered" >  }</span>
<span class="cstat-no" title="statement not covered" >  catch (error) {</span>
<span class="cstat-no" title="statement not covered" >    return error as Error;</span>
<span class="cstat-no" title="statement not covered" >  }</span>
}
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/utils/index.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/utils</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> src/utils</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">82.6% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>57/69</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">66.66% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>10/15</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>4/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">82.6% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>57/69</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file high" data-value="directory-handler.ts"><a href="directory-handler.ts.html">directory-handler.ts</a></td>
	<td data-value="82.05" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 82%"></div><div class="cover-empty" style="width: 18%"></div></div>
	</td>
	<td data-value="82.05" class="pct high">82.05%</td>
	<td data-value="39" class="abs high">32/39</td>
	<td data-value="50" class="pct medium">50%</td>
	<td data-value="6" class="abs medium">3/6</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="2" class="abs high">2/2</td>
	<td data-value="82.05" class="pct high">82.05%</td>
	<td data-value="39" class="abs high">32/39</td>
	</tr>

<tr>
	<td class="file medium" data-value="git.ts"><a href="git.ts.html">git.ts</a></td>
	<td data-value="70" class="pic medium">
	<div class="chart"><div class="cover-fill" style="width: 70%"></div><div class="cover-empty" style="width: 30%"></div></div>
	</td>
	<td data-value="70" class="pct medium">70%</td>
	<td data-value="10" class="abs medium">7/10</td>
	<td data-value="50" class="pct medium">50%</td>
	<td data-value="2" class="abs medium">1/2</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="70" class="pct medium">70%</td>
	<td data-value="10" class="abs medium">7/10</td>
	</tr>

<tr>
	<td class="file high" data-value="package-manager.ts"><a href="package-manager.ts.html">package-manager.ts</a></td>
	<td data-value="90" class="pic high">
	<div class="chart"><div class="cover-fill" style="width: 90%"></div><div class="cover-empty" style="width: 10%"></div></div>
	</td>
	<td data-value="90" class="pct high">90%</td>
	<td data-value="20" class="abs high">18/20</td>
	<td data-value="85.71" class="pct high">85.71%</td>
	<td data-value="7" class="abs high">6/7</td>
	<td data-value="100" class="pct high">100%</td>
	<td data-value="1" class="abs high">1/1</td>
	<td data-value="90" class="pct high">90%</td>
	<td data-value="20" class="abs high">18/20</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: coverage/src/utils/package-manager.ts.html
================================================

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for src/utils/package-manager.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/utils</a> package-manager.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">90% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>18/20</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">85.71% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>6/7</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">100% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>1/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">90% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>18/20</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line high'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">4x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">2x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">3x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-yes">1x</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">import type { PackageManager } from "../types";
&nbsp;
/**
 * Detects the package manager being used based on the npm config user agent.
 * This is useful for determining how to install dependencies in the project.
 *
 * @returns {PackageManager} The detected package manager.
 */
export function detectPackageManager(): PackageManager {
  /* eslint-disable node/no-process-env */
  const userAgent = process.env.npm_config_user_agent;
&nbsp;
  if (userAgent) {
    if (userAgent.startsWith("yarn")) {
      return "yarn";
    }
    else if (userAgent.startsWith("pnpm")) {
      return "pnpm";
    }
    else if (userAgent.startsWith("bun")) <span class="branch-0 cbranch-no" title="branch not covered" >{</span>
<span class="cstat-no" title="statement not covered" >      return "bun";</span>
<span class="cstat-no" title="statement not covered" >    }</span>
    else {
      return "npm";
    }
  }
  else {
    // assume npm if no user agent is set
    return "npm";
  }
};
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-06-17T03:34:01.918Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    


================================================
File: nix/devShell.nix
================================================
{
  mkShell,
  alejandra,
  bash,
  nodejs,
  pnpm,
}:
mkShell rec {
  name = "matt-init";

  packages = [
    bash
    nodejs
    pnpm

    # Required for CI for format checking.
    alejandra
  ];
}



================================================
File: src/cli.ts
================================================
import { cancel, intro, isCancel, spinner } from "@clack/prompts";
import { Command } from "commander";
import path from "node:path";
import pc from "picocolors";

import type { BackendSetup, DatabaseProvider, ProjectOptions } from "./types";

import { generateProject } from "./lib/project-generator";
import { promptBackendSetup } from "./prompts/backend-setup";
import { promptDatabaseProvider } from "./prompts/database-provider";
import { promptProjectName } from "./prompts/project-name";
import { promptInitGit, promptInstallDependencies, promptSetupVsCodeSettings, promptUseNix } from "./prompts/yes-no";
import { handleDirectoryConflict } from "./utils/directory-handler";

const PACKAGE_ROOT = path.join(__dirname, "../");
/**
 * Main CLI entry point for the matt-init tool.
 * This sets up a Next.js app with various options based on user input or command line flags.
 *
 * @returns {Promise<void>} Resolves when the CLI has completed its execution.
 */
export async function runCLI() {
  const program = new Command()
    .name("matt-init")
    .description("Set up Next.js apps the way Matt likes 'em.")
    .argument("[dir]", "Name of the app directory")
    .option("--no-git", "Skip git initialization")
    .option("--no-install", "Skip package installation")
    .option("--no-nix", "Skip Nix flake for environment management")
    .option("--no-vscode", "Skip VS Code settings setup")
    .option("-y, --default", "Use defaults, skip prompts")
    .version("1.0.0")
    .parse(process.argv);

  const cliProvidedName = program.args[0];
  const options = program.opts();

  // Start the interactive flow
  intro(pc.bgGreen(pc.black(" matt-init ")));

  let projectName = cliProvidedName;
  let shouldInitGit = !options.noGit;
  let shouldInstall = !options.noInstall;
  let shouldUseNix = !options.noNix;
  let shouldSetupVsCode = !options.noVscode;
  let backendSetup: BackendSetup = "none";
  let databaseProvider: DatabaseProvider = "none";

  try {
    // Interactive prompts if not using defaults
    if (!options.default) {
      // 1. Project name
      if (!projectName) {
        const nameResult = await promptProjectName();
        projectName = nameResult.projectName;
      }

      // 2. Backend setup
      backendSetup = await promptBackendSetup();

      // 3. Database provider (only if drizzle backend setup chosen)
      if (backendSetup === "drizzle") {
        databaseProvider = await promptDatabaseProvider();
      }

      // 4. Quick yes/no prompts
      if (!options.noNix) {
        shouldUseNix = await promptUseNix();
      }

      if (options.noVscode) {
        shouldSetupVsCode = await promptSetupVsCodeSettings();
      }

      if (options.noInstall !== false) {
        shouldInstall = await promptInstallDependencies();
      }

      if (options.noGit !== false) {
        shouldInitGit = await promptInitGit();
      }
    }

    if (!projectName) {
      projectName = "my-app";
    }

    const projectDir = path.resolve(process.cwd(), projectName);
    const templateDir = path.join(PACKAGE_ROOT, "src", "templates");

    // Handle existing directory conflicts
    await handleDirectoryConflict(projectDir, projectName);

    // Prepare project options
    const projectOptions: ProjectOptions = {
      projectName,
      projectDir,
      templateDir,
      shouldUseNix,
      shouldSetupVsCode,
      shouldInitGit,
      shouldInstall,
      backendSetup,
      databaseProvider,
    };

    // Generate the project with spinner
    const s = spinner();
    s.start("Creating your Next.js project...");

    await generateProject(projectOptions);

    s.stop("Project created successfully!");
  }
  catch (error) {
    if (isCancel(error)) {
      cancel("Operation cancelled.");
      process.exit(0);
    }

    cancel("Something went wrong!");
    console.error(error);
    process.exit(1);
  }
}



================================================
File: src/index.ts
================================================
#!/usr/bin/env node

import pc from "picocolors";

import { runCLI } from "./cli";

/**
 * Main entry point for the application.
 * Executes the CLI runner and handles any errors that occur during execution.
 * If an error occurs, it logs the error message in red and exits the process with code 1.
 *
 * @returns A promise that resolves when the CLI execution completes successfully
 * @throws Will exit the process with code 1 if any error occurs during CLI execution
 */
async function main() {
  try {
    await runCLI();
  }
  catch (error) {
    console.error(pc.red("An error occurred:"), error);
    process.exit(1);
  }
}

main();



================================================
File: src/types.ts
================================================
export type BackendSetup = "none" | "drizzle" | "supabase";
export type DatabaseProvider = "none" | "turso" | "neon" | "postgres";

export type ProjectOptions = {
  projectName: string;
  projectDir: string;
  templateDir: string;
  shouldUseNix: boolean;
  shouldSetupVsCode?: boolean;
  shouldInitGit: boolean;
  shouldInstall: boolean;
  backendSetup: BackendSetup;
  databaseProvider: DatabaseProvider;
};

export type PackageManager = "npm" | "yarn" | "pnpm" | "bun";



================================================
File: src/lib/db.ts
================================================
import fs from "fs-extra";
import path from "node:path";

import { addPackageToDependencies, addScriptToPackageJson, generateRandomSecret } from "./utils";

/**
 * Applies the Drizzle ORM setup for a Turso database in the specified project directory.
 * This function installs necessary packages, copies template files, sets up environment variables,
 * and adds scripts to package.json for database management.
 *
 * @param projectDir the directory of the project where Drizzle ORM will be set up
 * @param PACKAGE_ROOT the root directory of the package containing templates
 */
export async function applyDrizzleTurso(projectDir: string, PACKAGE_ROOT: string): Promise<void> {
  // dependencies
  await addPackageToDependencies(projectDir, "@libsql/client");
  await addPackageToDependencies(projectDir, "drizzle-orm");
  await addPackageToDependencies(projectDir, "better-auth");

  // devDependencies
  await addPackageToDependencies(projectDir, "drizzle-kit", true);
  await addPackageToDependencies(projectDir, "concurrently", true);

  // Copy the Drizzle setup template to the project directory
  const drizzleTemplatePath = path.join(PACKAGE_ROOT, "templates/backend/drizzle/turso");
  await fs.copy(drizzleTemplatePath, projectDir, {
    overwrite: true,
    errorOnExist: false,
  });

  // Copy the .env.example file to .env
  const envExamplePath = path.join(projectDir, ".env.example");
  const envPath = path.join(projectDir, ".env");
  await fs.copyFile(envExamplePath, envPath);

  // replace some .env values
  const envContent = await fs.readFile(envPath, "utf-8");
  const updatedEnvContent = envContent
    .replace("your_turso_database_url", "http://127.0.0.1:8080")
    .replace("your_better_auth_url", "https://localhost:3000")
    .replace("your_turso_auth_token", "# not needed for local development")
    .replace("your_better_auth_secret", await generateRandomSecret());
  await fs.writeFile(envPath, updatedEnvContent, "utf-8");

  // Add Drizzle scripts to package.json
  await addScriptToPackageJson(projectDir, "db:migrate", "drizzle-kit migrate");
  await addScriptToPackageJson(projectDir, "db:generate", "drizzle-kit generate");
  await addScriptToPackageJson(projectDir, "db:push", "drizzle-kit push");
  await addScriptToPackageJson(projectDir, "db:studio", "drizzle-kit studio");
  await addScriptToPackageJson(projectDir, "dev:db", "turso dev --db-file local.db");
  await addScriptToPackageJson(projectDir, "dev", "concurrently \"pnpm run dev:db\" \"next dev --turbopack\"", true);
}



================================================
File: src/lib/project-generator.ts
================================================
import fs from "fs-extra";
import path from "node:path";

import { findGitExecutable } from "~/utils/git";
import { detectPackageManager } from "~/utils/package-manager";

import type { BackendSetup, DatabaseProvider, ProjectOptions } from "../types";

import { applyDrizzleTurso } from "./db";
import { setProjectName } from "./utils";

const PACKAGE_ROOT = path.resolve(__dirname, "../");

/**
 * Generates a new project based on the provided options.
 * This function sets up the project structure, applies backend configurations,
 * sets up VS Code settings, initializes Git, and installs dependencies.
 *
 * @param {ProjectOptions} options The options for generating the project.
 * @returns {Promise<void>} A promise that resolves when the project is generated.
 */
export async function generateProject(options: ProjectOptions): Promise<void> {
  const targetPath = options.projectDir;
  await copyBaseTemplate(options.projectDir);
  // - Apply backend setup
  // - Configure database if needed

  if (options.backendSetup === "drizzle") {
    if (options.databaseProvider === "turso") {
      await applyDrizzleTurso(targetPath, PACKAGE_ROOT);
    }
  }

  if (options.shouldUseNix) {
    await applyNixFlake(targetPath, options.backendSetup, options.databaseProvider);
  }

  if (options.shouldSetupVsCode) {
    await applyVsCodeSettings(targetPath);
  }

  if (options.shouldInstall) {
    await installDependencies(targetPath);
  }

  // do this at the very end to ensure all files are in place
  if (options.shouldInitGit) {
    await applyGitInit(targetPath);
  }

  // clean up
  const gitignorePath = path.join(targetPath, "_gitignore");
  const newGitignorePath = path.join(targetPath, ".gitignore");

  const eslintConfigPath = path.join(targetPath, "_eslint.config.mjs");
  const newEslintConfigPath = path.join(targetPath, "eslint.config.mjs");

  await fs.rename(gitignorePath, newGitignorePath);
  await fs.rename(eslintConfigPath, newEslintConfigPath);

  await setProjectName(targetPath, options.projectName);
}

/**
 * Copies the base Next.js template to the target project directory.
 * This function uses fs-extra to copy the template files from the package root
 * to the specified project directory.
 *
 * @param targetPath The targetPath of the project.
 * @returns {Promise<void>} A promise that resolves when the template has been copied.
 */
async function copyBaseTemplate(targetPath: string): Promise<void> {
  // The base next.js template is located in src/templates/base
  const baseTemplatePath = path.join(PACKAGE_ROOT, "templates/base");
  // Use fs-extra to copy the base template to the target directory
  await fs.copy(baseTemplatePath, targetPath, {
    overwrite: true,
    errorOnExist: false,
  });
}

/**
 * Applies the Nix flake configuration to the project directory.
 * This function copies the Nix flake template and applies specific configurations
 * based on the backend setup and database provider.
 *
 * @param projectDir The directory where the project is located.
 * @param backend The backend setup chosen for the project.
 * @param dbProvider The database provider chosen for the project.
 * @returns {Promise<void>} A promise that resolves when the Nix flake has been applied.
 */
async function applyNixFlake(projectDir: string, backend: BackendSetup, dbProvider: DatabaseProvider): Promise<void> {
  // Copy the Nix flake template to the project directory
  const nixTemplatePath = path.join(PACKAGE_ROOT, "templates/extras/nix/base");
  await fs.copy(nixTemplatePath, projectDir, {
    overwrite: true,
    errorOnExist: false,
  });

  // TODO: Refactor for better extensibility
  if (backend === "drizzle" && dbProvider === "turso") {
    // Copy the Drizzle + Turso Nix flake template
    const drizzleTursoNixPath = path.join(PACKAGE_ROOT, "templates/extras/nix/drizzle/turso");
    await fs.copy(drizzleTursoNixPath, projectDir, {
      overwrite: true,
      errorOnExist: false,
    });
  }
}

/**
 * Initializes a Git repository in the project directory.
 * This function finds the Git executable, initializes a new Git repository,
 * sets the main branch to "main", and adds all files to the staging area.
 *
 * @param projectDir The directory where the project is located.
 * @returns {Promise<void>} A promise that resolves when the Git repository has been initialized.
 */
async function applyGitInit(projectDir: string): Promise<void> {
  const gitPath = await findGitExecutable();

  if (!gitPath || typeof gitPath !== "string") {
    throw new Error("Git is not installed or not found in PATH.");
  }

  const { execa } = await import("execa");
  await execa(gitPath, ["init"], {
    cwd: projectDir,
    stdio: "pipe",
  });

  await execa(gitPath, ["branch", "-m", "main"], {
    cwd: projectDir,
    stdio: "pipe",
  });

  await execa(gitPath, ["add", "."], {
    cwd: projectDir,
    stdio: "pipe",
  });
}

/**
 * Applies VS Code settings and extensions to the project directory.
 * This function copies the VS Code settings and extensions configuration
 * from the package templates to the project's .vscode directory.
 *
 * @param projectDir The directory where the project is located.
 * @returns {Promise<void>} A promise that resolves when the VS Code settings have been applied.
 */
async function applyVsCodeSettings(projectDir: string): Promise<void> {
  const vscodeSettingsPath = path.join(PACKAGE_ROOT, "templates/extras/vscode/base/_settings.json");
  const vscodeExtensionsPath = path.join(PACKAGE_ROOT, "templates/extras/vscode/base/_extensions.json");

  // Copy VS Code settings
  await fs.copy(vscodeSettingsPath, path.join(projectDir, ".vscode", "settings.json"), {
    overwrite: true,
    errorOnExist: false,
  });
  // Copy VS Code extensions
  await fs.copy(vscodeExtensionsPath, path.join(projectDir, ".vscode", "extensions.json"), {
    overwrite: true,
    errorOnExist: false,
  });
}

/**
 * Installs project dependencies using the detected package manager.
 * This function uses execa to run the package manager's install command
 * in the specified project directory.
 *
 * @param projectDir The directory where the project is located.
 * @returns {Promise<void>} A promise that resolves when the dependencies have been installed.
 */
async function installDependencies(projectDir: string): Promise<void> {
  const packageManager = detectPackageManager();

  const { execa } = await import("execa");
  await execa(packageManager, ["install"], {
    cwd: projectDir,
    stdio: "pipe",
  });
}



================================================
File: src/lib/utils.ts
================================================
import fs from "fs-extra";
import { randomBytes } from "node:crypto";
import path from "node:path";

/**
 * Adds a package to the project's dependencies or devDependencies in package.json.
 *
 * @param projectDir the directory of the project
 * @param packageName the name of the package to add
 * @param devDependency whether to add the package as a devDependency (default: false)
 */
export async function addPackageToDependencies(
  projectDir: string,
  packageName: string,
  devDependency: boolean = false,
): Promise<void> {
  const packageJsonPath = path.join(projectDir, "package.json");
  const packageJson = await fs.readJson(packageJsonPath);

  if (devDependency) {
    packageJson.devDependencies = packageJson.devDependencies || {};
    packageJson.devDependencies[packageName] = "latest";
  }
  else {
    packageJson.dependencies = packageJson.dependencies || {};
    packageJson.dependencies[packageName] = "latest";
  }

  await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });
}

/**
 * Adds a script to the project's package.json scripts section.
 *
 * @param projectDir the directory of the project
 * @param scriptName the name of the script to add
 * @param scriptCommand the command for the script
 * @param updateExisting whether to update an existing script with the same name (default: false)
 */
export async function addScriptToPackageJson(
  projectDir: string,
  scriptName: string,
  scriptCommand: string,
  updateExisting: boolean = false,
): Promise<void> {
  const packageJsonPath = path.join(projectDir, "package.json");
  const packageJson = await fs.readJson(packageJsonPath);
  packageJson.scripts = packageJson.scripts || {};

  if (!updateExisting && packageJson.scripts[scriptName]) {
    return;
  }

  packageJson.scripts[scriptName] = scriptCommand;
  await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });
}

/**
 * Generates a random 64-character hexadecimal string to be used as a secret.
 *
 * @returns {Promise<string>} A promise that resolves to a random secret string.
 */
export async function generateRandomSecret(): Promise<string> {
  return randomBytes(32).toString("hex");
}

/**
 * Sets the project name in various configuration files.
 * This function replaces the placeholder `__APP_NAME__` with the actual project name
 * in the specified files within the project directory.
 *
 * @param projectDir the directory of the project
 * @param projectName the name of the project to set
 */
export async function setProjectName(
  projectDir: string,
  projectName: string,
): Promise<void> {
  // this isn't comprehensive at all, and probably needs a refactor.
  // since we know what files the project name is used in, we can just
  // replace the placeholder with the actual project name.

  const filesToUpdate = [
    path.join(projectDir, "package.json"),
    path.join(projectDir, "flake.nix"),
    path.join(projectDir, "nix", "devShell.nix"),
  ];

  for (const filePath of filesToUpdate) {
    if (await fs.pathExists(filePath)) {
      let content = await fs.readFile(filePath, "utf-8");
      content = content.replace(/__APP_NAME__/g, projectName);
      await fs.writeFile(filePath, content, "utf-8");
    }
    // just skip if the file doesn't exist, this needs to be more robust
  }
}



================================================
File: src/prompts/backend-setup.ts
================================================
import { select } from "@clack/prompts";

import type { BackendSetup } from "../types";

/**
 * Prompts the user to select a backend setup for their project.
 *
 * @returns {Promise<BackendSetup>} The selected backend setup.
 */
export async function promptBackendSetup(): Promise<BackendSetup> {
  const backendSetup = await select({
    message: "Choose your backend setup:",
    options: [
      {
        value: "drizzle" as const,
        label: "Database + Drizzle + BetterAuth",
        hint: "Full-stack setup with type-safe DB and auth",
      },
      // {
      //   value: "supabase" as const,
      //   label: "Supabase",
      //   hint: "Hosted database with built-in auth",
      // },
      {
        value: "none" as const,
        label: "None",
        hint: "Just a clean Next.js frontend",
      },
    ],
  });

  if (typeof backendSetup === "symbol") {
    process.exit(0);
  }

  return backendSetup;
}



================================================
File: src/prompts/database-provider.ts
================================================
import { select } from "@clack/prompts";

import type { DatabaseProvider } from "../types";

/**
 * Prompts the user to select a database provider for their project.
 *
 * @returns {Promise<DatabaseProvider>} The selected database provider.
 */
export async function promptDatabaseProvider(): Promise<DatabaseProvider> {
  const databaseProvider = await select({
    message: "Choose your database provider:",
    options: [
      {
        value: "turso" as const,
        label: "Turso",
        hint: "Locally hostable SQLite",
      },
      // {
      //   value: "postgres" as const,
      //   label: "Docker Postgres",
      //   hint: "Local development with Docker",
      // },
    ],
  });

  if (typeof databaseProvider === "symbol") {
    process.exit(0);
  }

  return databaseProvider;
}



================================================
File: src/prompts/project-name.ts
================================================
import { text } from "@clack/prompts";

/**
 * Prompts the user for a project name and validates the input.
 *
 * @returns {Promise<{ projectName: string }>} The user's project name.
 */
export async function promptProjectName(): Promise<{ projectName: string }> {
  const projectName = await text({
    message: "What's your project name?",
    placeholder: "my-app",
    validate: validateProjectName,
  });

  if (typeof projectName === "symbol") {
    process.exit(0);
  }

  return { projectName };
}

export function validateProjectName(value: string | undefined): string | undefined {
  if (!value)
    return "Project name is required";
  if (!/^[a-z0-9-]+$/.test(value)) {
    return "Project name must only contain lowercase letters, numbers, and hyphens";
  }
  return undefined;
}



================================================
File: src/prompts/yes-no.ts
================================================
import { confirm } from "@clack/prompts";

/**
 * Prompts the user with a yes/no question and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise<boolean>} The user's response (true for yes, false for no).
 */
export async function promptUseNix(): Promise<boolean> {
  const useNix = await confirm({
    message: "Initialize with Nix flake?",
    initialValue: true,
  });

  if (typeof useNix === "symbol") {
    process.exit(0);
  }

  return useNix;
}

/**
 * Prompts the user to install dependencies and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise<boolean>} The user's response (true for yes, false for no).
 */
export async function promptInstallDependencies(): Promise<boolean> {
  const installDeps = await confirm({
    message: "Install dependencies?",
    initialValue: true,
  });

  if (typeof installDeps === "symbol") {
    process.exit(0);
  }

  return installDeps;
}

/**
 * Prompts the user to initialize a git repository and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise<boolean>} The user's response (true for yes, false for no).
 */
export async function promptInitGit(): Promise<boolean> {
  const initGit = await confirm({
    message: "Initialize git repository?",
    initialValue: true,
  });

  if (typeof initGit === "symbol") {
    process.exit(0);
  }

  return initGit;
}

/**
 * Prompts the user to set up VS Code settings and returns the answer.
 * If the user cancels, the process exits gracefully.
 *
 * @returns {Promise<boolean>} The user's response (true for yes, false for no).
 */
export async function promptSetupVsCodeSettings(): Promise<boolean> {
  const setupVsCode = await confirm({
    message: "Setup VS Code settings?",
    initialValue: true,
  });

  if (typeof setupVsCode === "symbol") {
    process.exit(0);
  }

  return setupVsCode;
}



================================================
File: src/templates/backend/drizzle/turso/_gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*
!.env.example

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# db
local.db*


================================================
File: src/templates/backend/drizzle/turso/drizzle.config.ts
================================================
import { defineConfig } from "drizzle-kit";

import env from "~/lib/env";

export default defineConfig({
  out: "./src/lib/db/migrations",
  schema: "./src/lib/db/schema/index.ts",
  dialect: "turso",
  casing: "snake_case",
  dbCredentials: {
    url: env.TURSO_DATABASE_URL!,
    authToken: env.NODE_ENV === "development" ? undefined : env.TURSO_AUTH_TOKEN!,
  },
});



================================================
File: src/templates/backend/drizzle/turso/middleware.ts
================================================
import type { NextRequest } from "next/server";

import { getSessionCookie } from "better-auth/cookies";
import { NextResponse } from "next/server";

export async function middleware(request: NextRequest) {
  const sessionCookie = getSessionCookie(request);

  if (!sessionCookie) {
    return NextResponse.redirect(new URL("/", request.url));
  }

  return NextResponse.next();
}

export const config = {
  matcher: ["/dashboard"],
};



================================================
File: src/templates/backend/drizzle/turso/.env.example
================================================
NODE_ENV=development
TURSO_DATABASE_URL=your_turso_database_url
TURSO_AUTH_TOKEN=your_turso_auth_token # not needed for local development
BETTER_AUTH_SECRET=your_better_auth_secret # you can use openssl for this
BETTER_AUTH_URL=your_better_auth_url



================================================
File: src/templates/backend/drizzle/turso/src/app/page.tsx
================================================
import { headers } from "next/headers";
import Link from "next/link";

import { auth } from "~/lib/auth";

import MattInitBanner from "../components/matt-init-banner";

export default async function Home() {
  const headersList = await headers();
  const session = await auth.api.getSession({
    headers: headersList,
  });

  return (
    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-sans">
      <main className="flex flex-col gap-[32px] row-start-2 items-center sm:items-start">
        <MattInitBanner />
        <ol className="list-inside list-decimal text-sm/8 text-center sm:text-left font-mono mx-auto">
          <li className="mb-4">
            Get started by
            {" "}
            <Link
              href="/signup"
              className="underline font-medium hover:text-[#1a1a1a] dark:hover:text-[#ccc] transition-colors"
            >
              signing up
            </Link>
            .
          </li>
          <li>
            Or by
            {" "}
            <Link
              href="/signin"
              className="underline font-medium hover:text-[#1a1a1a] dark:hover:text-[#ccc] transition-colors"
            >
              logging in
            </Link>
            {" "}
            if you already have an account.
          </li>
          {session && (
            <li className="mt-4">
              Finally, navigate to the protected
              {" "}
              <Link
                href="/dashboard"
                className="underline font-medium hover:text-[#1a1a1a] dark:hover:text-[#ccc] transition-colors"
              >
                /dashboard
              </Link>
              {" "}
              route!
            </li>
          )}

        </ol>

        <div className="flex gap-4 items-center flex-col sm:flex-row mx-auto">
          <a
            className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto"
            href="https://github.com/matthew-hre/matt-init"
            target="_blank"
            rel="noopener noreferrer"
          >
            ⭐ Star matt-init
          </a>
          <a
            className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[172px]"
            href="https://matthew-hre.com"
            target="_blank"
            rel="noopener noreferrer"
          >
            👋 Say hi to Matt
          </a>
        </div>
      </main>
    </div>
  );
}



================================================
File: src/templates/backend/drizzle/turso/src/app/api/auth/[...all]/route.ts
================================================
import { toNextJsHandler } from "better-auth/next-js";

import { auth } from "~/lib/auth";

export const { POST, GET } = toNextJsHandler(auth);



================================================
File: src/templates/backend/drizzle/turso/src/app/dashboard/page.tsx
================================================
import { headers } from "next/headers";
import { redirect } from "next/navigation";

import MattInitBanner from "~/components/matt-init-banner";
import { auth } from "~/lib/auth";
import { db } from "~/lib/db";
import { user } from "~/lib/db/schema";

async function signOut() {
  "use server";

  const headersList = await headers();

  await auth.api.signOut({
    headers: headersList,
  });

  redirect("/");
}

export default async function DashboardPage() {
  const headersList = await headers();

  // middleware is guarding this route, so this assertion is safe unless the middleware fails
  const session = (await auth.api.getSession({
    headers: headersList,
  }))!;

  const userCount = await db.$count(user);

  return (
    <div className="flex flex-col space-y-8 h-screen items-center justify-center">
      <MattInitBanner />
      <p className="font-sans">
        Hey
        {" "}
        <span className="font-bold">{session.user.name}</span>
        ! This is a protected route, meaning authentication is working!
      </p>
      <div className="flex flex-col sm:flex-row items-center justify-center gap-4">
        <p className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto">
          There are currently
          {" "}
          <span className="font-bold">{userCount}</span>
          {" "}
          users in the database.
        </p>
        <button
          type="button"
          onClick={signOut}
          className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[172px] cursor-pointer"
        >
          Sign Out
        </button>
      </div>
    </div>
  );
}



================================================
File: src/templates/backend/drizzle/turso/src/app/signin/page.tsx
================================================
import Link from "next/link";
import { redirect } from "next/navigation";

import { auth } from "~/lib/auth";

async function signinAction(formData: FormData) {
  "use server";

  const email = formData.get("email") as string;
  const password = formData.get("password") as string;

  await auth.api.signInEmail({
    body: {
      email,
      password,
      callbackURL: "/dashboard",
    },
  });

  redirect("/dashboard");
}

export default function SigninPage() {
  return (
    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]">
      <main className="flex flex-col gap-8 row-start-2 items-center sm:items-start w-full">
        <div className="w-full max-w-md mx-auto">
          <h1 className="text-2xl font-semibold tracking-tight mb-8 text-center font-[family-name:var(--font-geist-sans)]">
            Sign In
          </h1>

          <form action={signinAction} className="space-y-4">
            <div>
              <label htmlFor="email" className="block text-sm font-medium mb-2">
                Email
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                className="w-full px-4 py-3 rounded-full border border-black/[.08] dark:border-white/[.145] bg-background text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-foreground/20 focus:border-transparent"
                placeholder="Enter your email"
              />
            </div>

            <div>
              <label htmlFor="password" className="block text-sm font-medium mb-2">
                Password
              </label>
              <input
                type="password"
                id="password"
                name="password"
                required
                className="w-full px-4 py-3 rounded-full border border-black/[.08] dark:border-white/[.145] bg-background text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-foreground/20 focus:border-transparent"
                placeholder="Enter your password"
              />
            </div>

            <button
              type="submit"
              className="w-full rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-12 px-5 cursor-pointer"
            >
              Sign In
            </button>
          </form>

          <div className="mt-6 text-center">
            <span className="text-sm text-foreground/60">Don't have an account? </span>
            <Link
              href="/signup"
              className="text-sm underline font-medium hover:text-[#1a1a1a] dark:hover:text-[#ccc] transition-colors"
            >
              Sign up
            </Link>
          </div>
        </div>
      </main>
    </div>
  );
}



================================================
File: src/templates/backend/drizzle/turso/src/app/signup/page.tsx
================================================
import Link from "next/link";
import { redirect } from "next/navigation";
import { z } from "zod";

import { auth } from "~/lib/auth";

const signupSchema = z.object({
  name: z.string().min(1, "Name is required"),
  email: z.string().email("Please enter a valid email address"),
  password: z.string().min(8, "Password must be at least 8 characters long"),
});

async function signupAction(formData: FormData) {
  "use server";

  const rawData = {
    name: formData.get("name") as string,
    email: formData.get("email") as string,
    password: formData.get("password") as string,
  };

  const validationResult = signupSchema.safeParse(rawData);

  if (!validationResult.success) {
    const errorMessages = validationResult.error.errors.map(error => error.message).join(", ");

    redirect(`/signup?error=${
      encodeURIComponent(errorMessages)
    }`);
  }

  const { name, email, password } = validationResult.data;

  await auth.api.signUpEmail({
    body: {
      name,
      email,
      password,
      callbackURL: "/signin",
    },
  });

  redirect("/signin");
}

export default async function SignupPage({
  searchParams,
}: {
  searchParams: { error?: string };
}) {
  const error = (await searchParams).error;
  return (
    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-sans">
      <main className="flex flex-col gap-8 row-start-2 items-center sm:items-start w-full">
        <div className="w-full max-w-md mx-auto">
          <h1 className="text-2xl font-semibold tracking-tight mb-8 text-center font-sans">
            Sign Up
          </h1>

          <form action={signupAction} className="space-y-4">
            <div>
              <label htmlFor="name" className="block text-sm font-medium mb-2">
                Name
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                className="w-full px-4 py-3 rounded-full border border-black/[.08] dark:border-white/[.145] bg-background text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-foreground/20 focus:border-transparent"
                placeholder="Enter your name"
              />
            </div>

            <div>
              <label htmlFor="email" className="block text-sm font-medium mb-2">
                Email
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                className="w-full px-4 py-3 rounded-full border border-black/[.08] dark:border-white/[.145] bg-background text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-foreground/20 focus:border-transparent"
                placeholder="Enter your email"
              />
            </div>

            <div>
              <label htmlFor="password" className="block text-sm font-medium mb-2">
                Password
              </label>
              <input
                type="password"
                id="password"
                name="password"
                required
                className="w-full px-4 py-3 rounded-full border border-black/[.08] dark:border-white/[.145] bg-background text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-foreground/20 focus:border-transparent"
                placeholder="Enter your password"
              />
              <span className="text-xs text-foreground/60 mt-1">
                Password must be at least 8 characters long
              </span>
            </div>

            <button
              type="submit"
              className="w-full rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-12 px-5 cursor-pointer"
            >
              Sign Up
            </button>

          </form>

          <div className="mt-6 text-center">
            <span className="text-sm text-foreground/60">Already have an account? </span>
            <Link
              href="/signin"
              className="text-sm underline font-medium hover:text-[#1a1a1a] dark:hover:text-[#ccc] transition-colors"
            >
              Sign in
            </Link>
            {error && (
              <div className="mb-4 p-3 rounded-full bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-700 dark:text-red-300 text-sm mt-6">
                {error}
              </div>
            )}
          </div>

        </div>
      </main>
    </div>
  );
}



================================================
File: src/templates/backend/drizzle/turso/src/lib/auth.ts
================================================
import { betterAuth } from "better-auth";
import { drizzleAdapter } from "better-auth/adapters/drizzle";
import { nextCookies } from "better-auth/next-js";

import { db } from "./db";
import * as schema from "./db/schema";
import env from "./env";

export const auth = betterAuth({
  database: drizzleAdapter(db, {
    provider: "sqlite",
    schema,
  }),
  emailAndPassword: {
    enabled: true,
  },
  secret: env.BETTER_AUTH_SECRET,
  baseURL: env.BETTER_AUTH_URL,
  advanced: {
    database: {
      generateId: false,
    },
  },
  plugins: [nextCookies()],
});



================================================
File: src/templates/backend/drizzle/turso/src/lib/env.ts
================================================
import { z } from "zod";

import { tryParseEnv } from "./try-parse-env";

const EnvSchema = z.object({
  NODE_ENV: z.string(),
  TURSO_DATABASE_URL: z.string(),
  TURSO_AUTH_TOKEN: z.string(),
  BETTER_AUTH_SECRET: z.string(),
  BETTER_AUTH_URL: z.string(),
});

export type EnvSchema = z.infer<typeof EnvSchema>;

tryParseEnv(EnvSchema);

// eslint-disable-next-line node/no-process-env
export default EnvSchema.parse(process.env);



================================================
File: src/templates/backend/drizzle/turso/src/lib/db/index.ts
================================================
import { createClient } from "@libsql/client";
import { drizzle } from "drizzle-orm/libsql";

import env from "~/lib/env";

import * as schema from "./schema";

const client = createClient({
  url: env.TURSO_DATABASE_URL,
  authToken: env.NODE_ENV === "development" ? undefined : env.TURSO_AUTH_TOKEN!,
});

export const db = drizzle(client, { casing: "snake_case", schema });



================================================
File: src/templates/backend/drizzle/turso/src/lib/db/schema/auth.ts
================================================
import { int, integer, sqliteTable, text } from "drizzle-orm/sqlite-core";

export const user = sqliteTable("user", {
  id: int().primaryKey({ autoIncrement: true }),
  name: text().notNull(),
  email: text().notNull().unique(),
  emailVerified: integer({ mode: "boolean" }).$defaultFn(() => false).notNull(),
  image: text(),
  createdAt: integer().notNull(),
  updatedAt: integer().notNull(),
});

export const session = sqliteTable("session", {
  id: int().primaryKey({ autoIncrement: true }),
  expiresAt: integer().notNull(),
  token: text().notNull().unique(),
  createdAt: integer().notNull(),
  updatedAt: integer().notNull(),
  ipAddress: text(),
  userAgent: text(),
  userId: text().notNull().references(() => user.id, { onDelete: "cascade" }),
});

export const account = sqliteTable("account", {
  id: int().primaryKey({ autoIncrement: true }),
  accountId: text().notNull(),
  providerId: text().notNull(),
  userId: text().notNull().references(() => user.id, { onDelete: "cascade" }),
  accessToken: text(),
  refreshToken: text(),
  idToken: text(),
  accessTokenExpiresAt: integer(),
  refreshTokenExpiresAt: integer(),
  scope: text(),
  password: text(),
  createdAt: integer().notNull(),
  updatedAt: integer().notNull(),
});

export const verification = sqliteTable("verification", {
  id: int().primaryKey({ autoIncrement: true }),
  identifier: text().notNull(),
  value: text().notNull(),
  expiresAt: integer().notNull(),
  createdAt: integer().notNull(),
  updatedAt: integer().notNull(),
});



================================================
File: src/templates/backend/drizzle/turso/src/lib/db/schema/index.ts
================================================
export * from "./auth";




================================================
File: src/templates/base/_eslint.config.mjs
================================================
import antfu from "@antfu/eslint-config";

export default antfu(
  {
    type: "app",
    react: true,
    typescript: true,
    formatters: true,
    stylistic: {
      indent: 2,
      semi: true,
      quotes: "double",
    },
    ignores: ["**/migrations/*", "next-env.d.ts"],
  },
  {
    rules: {
      "ts/no-redeclare": "off",
      "ts/consistent-type-definitions": ["error", "type"],
      "no-console": "warn",
      "antfu/no-top-level-await": ["off"],
      "node/prefer-global/process": ["off"],
      "node/no-process-env": ["error"],
      "perfectionist/sort-imports": ["error", { tsconfigRootDir: "." }],
      "unicorn/filename-case": [
        "error",
        {
          case: "kebabCase",
          ignore: ["README.md"],
        },
      ],
    },
  },
);



================================================
File: src/templates/base/_gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts


================================================
File: src/templates/base/next-env.d.ts
================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.



================================================
File: src/templates/base/next.config.ts
================================================
import type { NextConfig } from "next";

import "src/lib/env";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;



================================================
File: src/templates/base/package.json
================================================
{
  "name": "__APP_NAME__",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix"
  },
  "dependencies": {
    "next": "15.3.2",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "zod": "^3.25.30"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^4.13.2",
    "@eslint-react/eslint-plugin": "^1.50.0",
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.3.2",
    "eslint-plugin-format": "^1.0.1",
    "eslint-plugin-react-refresh": "^0.4.20",
    "tailwindcss": "^4",
    "typescript": "^5"
  }
}



================================================
File: src/templates/base/postcss.config.mjs
================================================
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;



================================================
File: src/templates/base/tsconfig.json
================================================
{
  "compilerOptions": {
    "incremental": true,
    "target": "ES2017",
    "jsx": "preserve",
    "lib": ["dom", "dom.iterable", "esnext"],
    "module": "esnext",
    "moduleResolution": "bundler",
    "paths": {
      "~/*": ["./src/*"]
    },
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true,
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}



================================================
File: src/templates/base/.env.example
================================================
NODE_ENV=development


================================================
File: src/templates/base/src/app/globals.css
================================================
@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}



================================================
File: src/templates/base/src/app/layout.tsx
================================================
import type { Metadata } from "next";

import { Geist, Geist_Mono } from "next/font/google";

import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "matt-init",
  description: "Generated by matt-init",
  icons: {
    icon: "https://fav.farm/👋",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}



================================================
File: src/templates/base/src/app/page.tsx
================================================
import MattInitBanner from "../components/matt-init-banner";

export default function Home() {
  return (
    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]">
      <main className="flex flex-col gap-[32px] row-start-2 items-center sm:items-start">
        <MattInitBanner />
        <ol className="list-inside list-decimal text-sm/8 text-center sm:text-left font-[family-name:var(--font-geist-mono)] mx-auto">
          <li>
            Get started by editing
            {" "}
            <code className="bg-black/[.05] dark:bg-white/[.06] px-1 py-0.5 rounded font-[family-name:var(--font-geist-mono)] font-semibold">
              src/app/page.tsx
            </code>
            .
          </li>
          <li>
            Save and see your changes instantly.
          </li>
        </ol>

        <div className="flex gap-4 items-center flex-col sm:flex-row mx-auto">
          <a
            className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto"
            href="https://github.com/matthew-hre/matt-init"
            target="_blank"
            rel="noopener noreferrer"
          >
            ⭐ Star matt-init
          </a>
          <a
            className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[172px]"
            href="https://matthew-hre.com"
            target="_blank"
            rel="noopener noreferrer"
          >
            👋 Say hi to Matt
          </a>
        </div>
      </main>
    </div>
  );
}



================================================
File: src/templates/base/src/components/matt-init-banner.tsx
================================================
export default function MattInitBanner() {
  return (
    <pre>
      <code className="text-sm sm:text-lg font-semibold tracking-tight leading-0 text-center sm:text-left">
        ███╗   ███╗ █████╗ ████████╗████████╗      ██╗███╗   ██╗██╗████████╗
        <br />
        ████╗ ████║██╔══██╗╚══██╔══╝╚══██╔══╝      ██║████╗  ██║██║╚══██╔══╝
        <br />
        ██╔████╔██║███████║   ██║      ██║   █████╗██║██╔██╗ ██║██║   ██║
        <br />
        ██║╚██╔╝██║██╔══██║   ██║      ██║   ╚════╝██║██║╚██╗██║██║   ██║
        <br />
        ██║ ╚═╝ ██║██║  ██║   ██║      ██║         ██║██║ ╚████║██║   ██║
        <br />
        ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝      ╚═╝         ╚═╝╚═╝  ╚═══╝╚═╝   ╚═╝
        <br />
      </code>
    </pre>
  );
}



================================================
File: src/templates/base/src/lib/env.ts
================================================
import { z } from "zod";

import { tryParseEnv } from "./try-parse-env";

const EnvSchema = z.object({
  NODE_ENV: z.string(),
});

export type EnvSchema = z.infer<typeof EnvSchema>;

tryParseEnv(EnvSchema);

// eslint-disable-next-line node/no-process-env
export default EnvSchema.parse(process.env);



================================================
File: src/templates/base/src/lib/try-parse-env.ts
================================================
/* eslint-disable node/no-process-env */
import type { ZodObject, ZodRawShape } from "zod";

import { ZodError } from "zod";

export function tryParseEnv<T extends ZodRawShape>(
  EnvSchema: ZodObject<T>,
  buildEnv: Record<string, string | undefined> = process.env,
) {
  try {
    EnvSchema.parse(buildEnv);
  }
  catch (error) {
    if (error instanceof ZodError) {
      let message = "Missing required values in .env:\n";
      error.errors.forEach((err) => {
        message += `${err.path[0]}\n`;
      });

      console.error(message);
    }
    else {
      console.error("An unexpected error occurred while parsing environment variables:", error);
    }
    process.exit(1);
  }
}



================================================
File: src/templates/extras/nix/base/flake.nix
================================================
{
  description = "__APP_NAME__";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/release-24.11";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = {
    self,
    flake-utils,
    nixpkgs,
    ...
  }:
    flake-utils.lib.eachDefaultSystem (
      system: let
        pkgs = import nixpkgs {inherit system;};
      in {
        devShell = pkgs.callPackage ./nix/devShell.nix {};
        formatter = pkgs.alejandra;
      }
    );
}



================================================
File: src/templates/extras/nix/base/nix/devShell.nix
================================================
{
  mkShell,
  alejandra,
  bash,
  nodejs,
  pnpm,
}:
mkShell rec {
  name = "__APP_NAME__";

  packages = [
    bash
    nodejs
    pnpm

    # Required for CI for format checking.
    alejandra
  ];
}



================================================
File: src/templates/extras/nix/drizzle/turso/nix/devShell.nix
================================================
{
  mkShell,
  alejandra,
  bash,
  nodejs,
  pnpm,
  turso-cli,
  sqld,
}:
mkShell rec {
  name = "__APP_NAME__";

  packages = [
    bash
    nodejs
    pnpm

    # Required for CI for format checking.
    alejandra

    turso-cli
    sqld
  ];
}



================================================
File: src/templates/extras/vscode/base/_extensions.json
================================================
{
  "recommendations": [
    "dbaeumer.vscode-eslint",
    "bradlc.vscode-tailwindcss"
  ]
}



================================================
File: src/templates/extras/vscode/base/_settings.json
================================================
{
  // Disable the default formatter, use eslint instead
  "prettier.enable": false,
  "editor.formatOnSave": false,
  // Auto fix
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never"
  },
  "files.associations": {
    "*.css": "tailwindcss"
  },
  // Silent the stylistic rules in you IDE, but still auto fix them
  "eslint.rules.customizations": [
    {
      "rule": "style/*",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "format/*",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*-indent",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*-spacing",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*-spaces",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*-order",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*-dangle",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*-newline",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*quotes",
      "severity": "off",
      "fixable": true
    },
    {
      "rule": "*semi",
      "severity": "off",
      "fixable": true
    }
  ],
  // Enable eslint for all supported languages
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml",
    "toml",
    "xml",
    "gql",
    "graphql",
    "astro",
    "svelte",
    "css",
    "less",
    "scss",
    "pcss",
    "postcss"
  ]
}




================================================
File: src/utils/directory-handler.ts
================================================
import fs from "fs-extra";

/**
 * Handles the case where the target directory already exists and is not empty.
 *
 * @param projectDir the directory where the project will be created
 * @param projectName the name of the project, used for display purposes
 * @returns "overwrite" | "merge" | "cancel"
 */
export async function handleExistingDirectory(projectDir: string, projectName: string): Promise<"overwrite" | "merge" | "cancel"> {
  const { select, isCancel } = await import("@clack/prompts");

  const choice = await select({
    message: `Directory "${projectName}" already exists and is not empty. What would you like to do?`,
    options: [
      { value: "overwrite", label: "Overwrite (delete existing content)" },
      { value: "merge", label: "Merge (keep existing files, add new ones)" },
      { value: "cancel", label: "Cancel operation" },
    ],
    initialValue: "cancel",
  });

  if (isCancel(choice)) {
    return "cancel";
  }

  return choice as "overwrite" | "merge" | "cancel";
}

/**
 * Handles directory conflicts when creating a new project.
 *
 * @param projectDir the directory where the project will be created
 * @param projectName the name of the project, used for display purposes
 */
export async function handleDirectoryConflict(projectDir: string, projectName: string): Promise<void> {
  if (fs.existsSync(projectDir)) {
    const dirContents = fs.readdirSync(projectDir);
    if (dirContents.length > 0) {
      const action = await handleExistingDirectory(projectDir, projectName);

      switch (action) {
        case "overwrite": {
          await fs.remove(projectDir);
          break;
        }
        case "merge": {
          // Do nothing, let the copy operation merge/overwrite files
          break;
        }
        case "cancel": {
          const { cancel } = await import("@clack/prompts");
          cancel("Operation cancelled.");
          process.exit(0);
        }
      }
    }
  }
}



================================================
File: src/utils/git.ts
================================================
/**
 * Utility function to find the path to the git executable.
 *
 * @returns {Promise<string | Error>} Resolves with the path to the git executable or an error if not found.
 */
export async function findGitExecutable(): Promise<string | Error> {
  const { execa } = await import("execa");

  try {
    const { stdout } = await execa("which", ["git"]);
    return stdout.trim();
  }
  catch (error) {
    return error as Error;
  }
}



================================================
File: src/utils/package-manager.ts
================================================
import type { PackageManager } from "../types";

/**
 * Detects the package manager being used based on the npm config user agent.
 * This is useful for determining how to install dependencies in the project.
 *
 * @returns {PackageManager} The detected package manager.
 */
export function detectPackageManager(): PackageManager {
  /* eslint-disable node/no-process-env */
  const userAgent = process.env.npm_config_user_agent;

  if (userAgent) {
    if (userAgent.startsWith("yarn")) {
      return "yarn";
    }
    else if (userAgent.startsWith("pnpm")) {
      return "pnpm";
    }
    else if (userAgent.startsWith("bun")) {
      return "bun";
    }
    else {
      return "npm";
    }
  }
  else {
    // assume npm if no user agent is set
    return "npm";
  }
};



================================================
File: test/cli.test.ts
================================================



================================================
File: test/projects.test.ts
================================================
import fs from "fs-extra";
import path from "node:path";
import tmp from "tmp";
import { describe, expect, it } from "vitest";

import { generateProject } from "../src/lib/project-generator";

const bool = [true, false];
const backendConfigs = [
  { backendSetup: "none" as const, databaseProvider: "none" as const },
  { backendSetup: "drizzle" as const, databaseProvider: "turso" as const },
];

const combinations = bool.flatMap(shouldInitGit =>
  bool.flatMap(shouldUseNix =>
    bool.flatMap(shouldSetupVsCode =>
      backendConfigs.map(({ backendSetup, databaseProvider }) => ({
        shouldInitGit,
        shouldUseNix,
        shouldSetupVsCode,
        backendSetup,
        databaseProvider,
      })),
    ),
  ),
);

describe.each(combinations)(
  "generateProject with git=$shouldInitGit, nix=$shouldUseNix, vscode=$shouldSetupVsCode, backend=$backendSetup, db=$databaseProvider",
  ({ shouldInitGit, shouldUseNix, shouldSetupVsCode, backendSetup, databaseProvider }) => {
    it("generates project correctly", async () => {
      const options = {
        projectName: "test-app",
        backendSetup,
        databaseProvider,
        shouldInitGit,
        shouldUseNix,
        shouldSetupVsCode,
        shouldInstall: false,
      };

      const tempDir = tmp.dirSync({ unsafeCleanup: true });
      const projectDir = path.join(tempDir.name, options.projectName);
      await generateProject({
        ...options,
        projectDir,
        templateDir: "",
      });

      expect(await fs.pathExists(projectDir)).toBe(true);

      if (shouldUseNix) {
        expect(await fs.pathExists(path.join(projectDir, "flake.nix"))).toBe(true);
      }

      if (shouldSetupVsCode) {
        expect(await fs.pathExists(path.join(projectDir, ".vscode", "settings.json"))).toBe(true);
      }

      if (shouldInitGit) {
        expect(await fs.pathExists(path.join(projectDir, ".git"))).toBe(true);
      }

      if (backendSetup === "drizzle" && databaseProvider === "turso") {
        expect(await fs.pathExists(path.join(projectDir, "drizzle.config.ts"))).toBe(true);
      }

      tempDir.removeCallback();
    });
  },
);



================================================
File: test/lib/project-generator.test.ts
================================================
import fs from "fs-extra";
import os from "node:os";
import path from "node:path";
import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";

import type { ProjectOptions } from "../../src/types";

import { generateProject } from "../../src/lib/project-generator";

const tempDirs: string[] = [];

function baseOptions(): ProjectOptions {
  const tempDir = fs.mkdtempSync(path.join(os.tmpdir(), "proj-gen-"));
  tempDirs.push(tempDir);
  return {
    projectName: "test-app",
    projectDir: tempDir,
    templateDir: path.join(__dirname, "../../src/templates"),
    shouldUseNix: false,
    shouldSetupVsCode: false,
    shouldInitGit: false,
    shouldInstall: false,
    backendSetup: "none",
    databaseProvider: "none",
  };
}

vi.mock("execa", () => ({
  execa: vi.fn(),
}));

vi.mock("~/lib/utils", async (importOriginal) => {
  const mod = await importOriginal();
  return {
    ...(mod as object),
    setProjectName: vi.fn(),
  };
});

describe("generateProject", () => {
  beforeEach(() => {
    vi.clearAllMocks();
  });

  it("copies the base template to the target directory", async () => {
    const options = baseOptions();
    await generateProject(options);

    const copied = await fs.pathExists(path.join(options.projectDir, "src/app/page.tsx"));
    expect(copied).toBe(true);
  });

  it("renames special template files like _gitignore", async () => {
    const options = baseOptions();
    await generateProject(options);

    const gitignoreExists = await fs.pathExists(path.join(options.projectDir, ".gitignore"));
    const eslintExists = await fs.pathExists(path.join(options.projectDir, "eslint.config.mjs"));

    expect(gitignoreExists).toBe(true);
    expect(eslintExists).toBe(true);
  });

  it("calls setProjectName", async () => {
    const options = baseOptions();
    const { setProjectName } = await import("../../src/lib/utils");

    await generateProject(options);
    expect(setProjectName).toHaveBeenCalledWith(options.projectDir, options.projectName);
  });

  afterEach(() => {
    // Clean up all temporary directories created during tests
    tempDirs.forEach((dir) => {
      if (fs.pathExistsSync(dir)) {
        fs.removeSync(dir);
      }
    });
    tempDirs.length = 0; // Clear the array
  });
});



================================================
File: test/lib/system.test.ts
================================================
/* eslint-disable node/no-process-env */
import { afterEach, describe, expect, it } from "vitest";

import { findGitExecutable } from "../../src/utils/git";
import { detectPackageManager } from "../../src/utils/package-manager";

describe("git utils", () => {
  it("findGitExecutable returns a string path", async () => {
    const gitPath = await findGitExecutable();
    expect(typeof gitPath).toBe("string");
    expect(gitPath).toMatch(/git/);
  });
});

describe("package manager utils", () => {
  const originalEnv = process.env;

  afterEach(() => {
    process.env = { ...originalEnv };
  });

  it("detects pnpm when present", () => {
    process.env.npm_config_user_agent = "pnpm/8.6.7 node/v18.16.0 darwin arm64";
    expect(detectPackageManager()).toBe("pnpm");
  });

  it("detects yarn when present", () => {
    process.env.npm_config_user_agent = "yarn/1.22.19 npm/? node/v18.16.0 darwin arm64";
    expect(detectPackageManager()).toBe("yarn");
  });

  it("detects npm when present", () => {
    process.env.npm_config_user_agent = "npm/9.6.7 node/v18.16.0 darwin arm64";
    expect(detectPackageManager()).toBe("npm");
  });

  it("falls back to npm if no agent is set", () => {
    delete process.env.npm_config_user_agent;
    expect(detectPackageManager()).toBe("npm");
  });
});



================================================
File: test/lib/utils.test.ts
================================================
import fs from "fs-extra";
import os from "node:os";
import path from "node:path";
import { afterEach, describe, expect, it } from "vitest";

import {
  addPackageToDependencies,
  addScriptToPackageJson,
  generateRandomSecret,
  setProjectName,
} from "../../src/lib/utils";

const tempDirs: string[] = [];

function createTempProject(): string {
  const tempDir = fs.mkdtempSync(path.join(os.tmpdir(), "matt-init-test-"));
  tempDirs.push(tempDir);
  fs.writeJsonSync(path.join(tempDir, "package.json"), {});
  fs.mkdirSync(path.join(tempDir, "nix"), { recursive: true });
  fs.writeFileSync(path.join(tempDir, "flake.nix"), "name = '__APP_NAME__';");
  fs.writeFileSync(path.join(tempDir, "nix/devShell.nix"), "name = '__APP_NAME__';");
  return tempDir;
}

describe("utils", () => {
  afterEach(() => {
    // Clean up all temporary directories created during tests
    tempDirs.forEach((dir) => {
      if (fs.pathExistsSync(dir)) {
        fs.removeSync(dir);
      }
    });
    tempDirs.length = 0; // Clear the array
  });

  it("generateRandomSecret returns a 64-char hex string", async () => {
    const secret = await generateRandomSecret();
    expect(secret).toMatch(/^[a-f0-9]{64}$/);
  });

  it("addScriptToPackageJson adds script", async () => {
    const dir = createTempProject();
    await addScriptToPackageJson(dir, "dev", "next dev");
    const pkg = await fs.readJson(path.join(dir, "package.json"));
    expect(pkg.scripts.dev).toBe("next dev");
  });

  it("addScriptToPackageJson overwrites existing script", async () => {
    const dir = createTempProject();
    await addScriptToPackageJson(dir, "dev", "next dev");
    await addScriptToPackageJson(dir, "dev", "next start", true);
    const pkg = await fs.readJson(path.join(dir, "package.json"));
    expect(pkg.scripts.dev).toBe("next start");
  });

  it("addPackageToDependencies adds to dependencies", async () => {
    const dir = createTempProject();
    await addPackageToDependencies(dir, "chalk");
    const pkg = await fs.readJson(path.join(dir, "package.json"));
    expect(pkg.dependencies.chalk).toBe("latest");
  });

  it("addPackageToDependencies adds to devDependencies", async () => {
    const dir = createTempProject();
    await addPackageToDependencies(dir, "vitest", true);
    const pkg = await fs.readJson(path.join(dir, "package.json"));
    expect(pkg.devDependencies.vitest).toBe("latest");
  });

  it("setProjectName replaces __APP_NAME__ in files", async () => {
    const dir = createTempProject();
    await setProjectName(dir, "hello-world");
    const flake = await fs.readFile(path.join(dir, "flake.nix"), "utf-8");
    const devShell = await fs.readFile(path.join(dir, "nix/devShell.nix"), "utf-8");
    expect(flake).toContain("hello-world");
    expect(devShell).toContain("hello-world");
  });
});



================================================
File: test/prompts/backup-setup.test.ts
================================================
import type { MockInstance } from "vitest";

import { select } from "@clack/prompts";
import { beforeEach, describe, expect, it, vi } from "vitest";

import { promptBackendSetup } from "../../src/prompts/backend-setup";

vi.mock("@clack/prompts");

describe("promptBackendSetup", () => {
  let exitSpy: MockInstance;

  beforeEach(() => {
    vi.resetAllMocks();
    exitSpy = vi.spyOn(process, "exit").mockImplementation(() => {
      throw new Error("process.exit");
    });
  });

  it("returns 'drizzle' when selected", async () => {
    (select as any).mockResolvedValue("drizzle");
    const result = await promptBackendSetup();
    expect(result).toBe("drizzle");
    expect(exitSpy).not.toHaveBeenCalled();
  });

  it("returns 'none' when selected", async () => {
    (select as any).mockResolvedValue("none");
    const result = await promptBackendSetup();
    expect(result).toBe("none");
    expect(exitSpy).not.toHaveBeenCalled();
  });

  it("calls process.exit on cancel", async () => {
    (select as any).mockResolvedValue(Symbol("cancel"));
    await expect(promptBackendSetup()).rejects.toThrow("process.exit");
    expect(exitSpy).toHaveBeenCalledWith(0);
  });
});



================================================
File: test/prompts/database-provider.test.ts
================================================
import type { MockInstance } from "vitest";

import { select } from "@clack/prompts";
import { beforeEach, describe, expect, it, vi } from "vitest";

import { promptDatabaseProvider } from "../../src/prompts/database-provider";

vi.mock("@clack/prompts");

describe("promptDatabaseProvider", () => {
  let exitSpy: MockInstance;

  beforeEach(() => {
    vi.resetAllMocks();
    exitSpy = vi.spyOn(process, "exit").mockImplementation(() => {
      throw new Error("process.exit");
    });
  });

  it("returns 'turso' when selected", async () => {
    (select as any).mockResolvedValue("turso");
    const result = await promptDatabaseProvider();
    expect(result).toBe("turso");
    expect(exitSpy).not.toHaveBeenCalled();
  });

  it("calls process.exit on cancel", async () => {
    (select as any).mockResolvedValue(Symbol("cancel"));
    await expect(promptDatabaseProvider()).rejects.toThrow("process.exit");
    expect(exitSpy).toHaveBeenCalledWith(0);
  });
});



================================================
File: test/prompts/project-name.test.ts
================================================
import type { MockInstance } from "vitest";

import { text } from "@clack/prompts";
import { beforeEach, describe, expect, it, vi } from "vitest";

import { promptProjectName, validateProjectName } from "../../src/prompts/project-name";

vi.mock("@clack/prompts");

describe("promptProjectName", () => {
  let exitSpy: MockInstance;

  beforeEach(() => {
    vi.resetAllMocks();
    exitSpy = vi.spyOn(process, "exit").mockImplementation(() => {
      throw new Error("process.exit");
    });
  });

  it("returns a valid project name", async () => {
    (text as any).mockResolvedValue("my-app");
    const result = await promptProjectName();
    expect(result).toEqual({ projectName: "my-app" });
    expect(exitSpy).not.toHaveBeenCalled();
  });

  it("calls process.exit on cancel", async () => {
    (text as any).mockResolvedValue(Symbol("cancel"));
    await expect(promptProjectName()).rejects.toThrow("process.exit");
    expect(exitSpy).toHaveBeenCalledWith(0);
  });

  describe("validateProjectName", () => {
    it("accepts valid project names", () => {
      expect(validateProjectName("valid-name")).toBeUndefined();
      expect(validateProjectName("abc123")).toBeUndefined();
    });

    it("rejects empty names", () => {
      expect(validateProjectName("")).toBe("Project name is required");
      expect(validateProjectName(undefined)).toBe("Project name is required");
    });

    it("rejects names with uppercase letters", () => {
      expect(validateProjectName("BadName")).toMatch(/must only contain/);
    });

    it("rejects names with symbols", () => {
      expect(validateProjectName("nope!")).toMatch(/must only contain/);
      expect(validateProjectName("white space")).toMatch(/must only contain/);
    });
  });
});



================================================
File: test/prompts/yes-no.test.ts
================================================
import type { MockInstance } from "vitest";

import { confirm } from "@clack/prompts";
import { beforeEach, describe, expect, it, vi } from "vitest";

import {
  promptInitGit,
  promptInstallDependencies,
  promptSetupVsCodeSettings,
  promptUseNix,
} from "../../src/prompts/yes-no";

vi.mock("@clack/prompts");

describe("prompt functions", () => {
  let exitSpy: MockInstance;

  beforeEach(() => {
    vi.resetAllMocks();
    exitSpy = vi.spyOn(process, "exit").mockImplementation(() => {
      throw new Error("process.exit");
    });
  });

  it("promptUseNix returns true", async () => {
    (confirm as any).mockResolvedValue(true);
    const result = await promptUseNix();
    expect(result).toBe(true);
    expect(exitSpy).not.toHaveBeenCalled();
  });

  it("promptUseNix exits if cancelled", async () => {
    (confirm as any).mockResolvedValue(Symbol("cancel"));
    await expect(promptUseNix()).rejects.toThrow("process.exit");
    expect(exitSpy).toHaveBeenCalledWith(0);
  });

  it("promptInstallDependencies returns false", async () => {
    (confirm as any).mockResolvedValue(false);
    const result = await promptInstallDependencies();
    expect(result).toBe(false);
  });

  it("promptInitGit returns true", async () => {
    (confirm as any).mockResolvedValue(true);
    const result = await promptInitGit();
    expect(result).toBe(true);
  });

  it("promptSetupVsCodeSettings exits on cancel", async () => {
    (confirm as any).mockResolvedValue(Symbol("cancel"));
    await expect(promptSetupVsCodeSettings()).rejects.toThrow("process.exit");
    expect(exitSpy).toHaveBeenCalledWith(0);
  });
});



================================================
File: test/utils/directory-handler.test.ts
================================================
import fs from "fs-extra";
import os from "node:os";
import path from "node:path";
import { afterEach, describe, expect, it, vi } from "vitest";

const tempDirs: string[] = [];

function createTempDirWithContent(dirName: string): string {
  const tempDir = path.join(os.tmpdir(), dirName);
  tempDirs.push(tempDir);
  fs.ensureDirSync(tempDir);
  fs.writeFileSync(path.join(tempDir, "existing.txt"), "hello");
  return tempDir;
}

describe("handleDirectoryConflict", () => {
  afterEach(() => {
    // Clean up all temporary directories created during tests
    tempDirs.forEach((dir) => {
      if (fs.pathExistsSync(dir)) {
        fs.removeSync(dir);
      }
    });
    tempDirs.length = 0; // Clear the array
  });

  it("allows proceeding when target directory doesn't exist", async () => {
    const { handleDirectoryConflict } = await import("../../src/utils/directory-handler");
    const tempDir = path.join(os.tmpdir(), `no-dir-${Date.now()}`);
    await expect(handleDirectoryConflict(tempDir, "test-app")).resolves.toBeUndefined();
  });

  it("throws if directory exists and user aborts", async () => {
    const existingDir = createTempDirWithContent(`abort-dir-${Date.now()}`);

    vi.mock("@clack/prompts", () => ({
      select: () => Symbol("cancel"),
      isCancel: (val: unknown) => typeof val === "symbol" && String(val) === "Symbol(cancel)",
      cancel: vi.fn(() => {
        throw new Error("User cancelled operation.");
      }),
    }));

    const { handleDirectoryConflict: mockedHandler } = await import("../../src/utils/directory-handler");

    await expect(mockedHandler(existingDir, "test-app")).rejects.toThrow("User cancelled operation.");
  });
});



================================================
File: .github/workflows/lint.yaml
================================================
name: Lint

on:
  pull_request:
    branches:
      - main

jobs:
  alejandra:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup Nix Cache
        uses: actions/cache@v4
        with:
          path: /nix
          key: nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: alejandra check
        run: nix develop -c alejandra --check .

  eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup Nix Cache
        uses: actions/cache@v4
        with:
          path: /nix
          key: nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Setup pnpm Cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            node-modules-${{ runner.os }}-
      - name: pnpm install
        run: nix develop -c pnpm install
      - name: lint
        run: nix develop -c pnpm lint



================================================
File: .husky/pre-commit
================================================
pnpm lint-staged



================================================
File: .husky/_/applypatch-msg
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/commit-msg
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/h
================================================
#!/usr/bin/env sh
[ "$HUSKY" = "2" ] && set -x
n=$(basename "$0")
s=$(dirname "$(dirname "$0")")/$n

[ ! -f "$s" ] && exit 0

if [ -f "$HOME/.huskyrc" ]; then
	echo "husky - '~/.huskyrc' is DEPRECATED, please move your code to ~/.config/husky/init.sh"
fi
i="${XDG_CONFIG_HOME:-$HOME/.config}/husky/init.sh"
[ -f "$i" ] && . "$i"

[ "${HUSKY-}" = "0" ] && exit 0

export PATH="node_modules/.bin:$PATH"
sh -e "$s" "$@"
c=$?

[ $c != 0 ] && echo "husky - $n script failed (code $c)"
[ $c = 127 ] && echo "husky - command not found in PATH=$PATH"
exit $c



================================================
File: .husky/_/husky.sh
================================================
echo "husky - DEPRECATED

Please remove the following two lines from $0:

#!/usr/bin/env sh
. \"\$(dirname -- \"\$0\")/_/husky.sh\"

They WILL FAIL in v10.0.0
"


================================================
File: .husky/_/post-applypatch
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/post-checkout
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/post-commit
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/post-merge
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/post-rewrite
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/pre-applypatch
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/pre-auto-gc
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/pre-commit
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/pre-merge-commit
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/pre-push
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/pre-rebase
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/prepare-commit-msg
================================================
#!/usr/bin/env sh
. "$(dirname "$0")/h"


================================================
File: .husky/_/.gitignore
================================================
*

